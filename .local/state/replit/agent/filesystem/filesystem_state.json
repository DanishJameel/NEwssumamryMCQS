{"file_contents":{"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# Geo-Political News Mapper - Educational Platform\n\n## Overview\n\nThe Geo-Political News Mapper is an educational platform designed to help students understand global affairs through AI-powered news analysis and automated study guide generation. The application combines comprehensive geopolitical news data with intelligent categorization, sentiment analysis, and educational insights. Students can explore world events through a streamlined news grid interface, filter events by category and timeline, and access AI-generated study guides specifically tailored for CSS, ISSB, SAT, and general current affairs learning. Each study guide includes summaries, keywords, key figures, discussion questions, quiz questions, vocabulary definitions, and subject linkages. The platform focuses on learning outcomes and analytical insights rather than geographical visualization.\n\n## Recent Changes (January 2025)\n\n### Study Guide System - Fully Functional\n- ✅ **AI-Powered Study Guide Generation**: Complete OpenAI integration generating comprehensive educational content\n- ✅ **Interactive Study Guide Modal**: Tabbed interface with Overview, Discussion, Quiz, Vocabulary, and Exam Prep sections\n- ✅ **Educational Content Features**: Automated generation of summaries, keywords, discussion questions, quiz questions with explanations, vocabulary definitions, and CSS subject linkage\n- ✅ **Button Functionality**: Resolved event propagation issues - Study Guide buttons now open modals correctly without interference\n- ✅ **API Integration**: All endpoints working properly with proper authentication and data generation\n- ✅ **Multi-Exam Support**: Content tailored for CSS, ISSB, SAT, and general current affairs preparation\n\n## User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n## System Architecture\n\n### Frontend Architecture\nThe frontend is built using React with TypeScript and follows a component-based architecture. The application uses Vite as the build tool and development server, providing fast hot module replacement and optimized builds. The UI is styled with Tailwind CSS and uses shadcn/ui components for consistent design patterns. The frontend implements a single-page application (SPA) architecture with client-side routing using Wouter.\n\n**Key architectural decisions:**\n- **React + TypeScript**: Chosen for type safety, component reusability, and developer experience\n- **Vite build system**: Selected for fast development builds and modern JavaScript features\n- **Tailwind CSS + shadcn/ui**: Provides utility-first styling with pre-built accessible components\n- **Component composition**: Modular components for filters, maps, analytics panels, and modals\n\n### Backend Architecture\nThe backend uses Express.js with TypeScript running on Node.js, implementing a RESTful API design. The server follows a clean separation of concerns with dedicated modules for routing, storage, and server configuration. The application uses an in-memory storage implementation for development with sample data, designed to be easily replaced with a database implementation.\n\n**Key architectural decisions:**\n- **Express.js framework**: Lightweight and flexible for building REST APIs\n- **TypeScript throughout**: Ensures type consistency between frontend and backend\n- **Modular storage interface**: Abstracted storage layer allows easy database integration\n- **Middleware-based request handling**: Structured request processing with logging and error handling\n\n### Data Management\nThe application uses a shared schema definition approach with Zod for runtime validation and Drizzle ORM for database operations. The data model centers around news events with rich metadata including location data, categorization, sentiment analysis, and educational context. The system is designed to support PostgreSQL as the primary database with spatial data capabilities.\n\n**Key architectural decisions:**\n- **Shared schema approach**: Single source of truth for data types between frontend and backend\n- **Drizzle ORM**: Type-safe database operations with migration support\n- **Zod validation**: Runtime type checking and data validation\n- **Rich event metadata**: Comprehensive data model supporting educational use cases and study guide generation\n- **AI-powered study guides**: Automated generation of educational content including summaries, quizzes, and exam-specific materials\n\n### State Management\nThe frontend uses TanStack Query (React Query) for server state management, providing caching, background updates, and optimistic updates. Local state is managed through React hooks and context where appropriate. The application implements real-time data fetching with automatic refetch intervals for live news updates.\n\n**Key architectural decisions:**\n- **TanStack Query**: Robust server state management with caching and synchronization\n- **React hooks for local state**: Simple state management for UI interactions\n- **Automatic data refresh**: Keeps news data current with periodic background fetches\n\n### News Grid Interface\nThe application uses a streamlined news grid layout for displaying events, prioritizing content readability and educational value. The interface presents events as detailed cards with AI insights, learning objectives, and analytical data prominently featured. The design emphasizes educational content and removes geographical complexity to focus on news analysis.\n\n**Key architectural decisions:**\n- **Card-based layout**: Clean, scannable news event presentation with integrated study guide access\n- **AI insights prominence**: Geopolitical impact, risk levels, and sentiment clearly displayed\n- **Educational focus**: Learning objectives and automated study guide generation featured prominently\n- **Content-first design**: Prioritizes news analysis and educational content over geographical visualization\n- **Study guide integration**: One-click access to comprehensive educational materials for each news event\n\n## External Dependencies\n\n### Database and ORM\n- **PostgreSQL**: Primary database with PostGIS extension for spatial data\n- **Drizzle ORM**: Type-safe database toolkit with migration support\n- **Neon Database**: Serverless PostgreSQL hosting solution\n\n### Frontend Libraries\n- **React 18**: Core UI framework with modern hooks and concurrent features\n- **TanStack Query**: Server state management and data fetching\n- **Wouter**: Lightweight client-side routing\n- **React Grid Layout**: News event display system\n- **Chart.js**: Data visualization for analytics charts\n- **Radix UI**: Headless UI primitives for accessibility\n- **Tailwind CSS**: Utility-first CSS framework\n\n### Development and Build Tools\n- **Vite**: Fast build tool and development server\n- **TypeScript**: Static type checking and enhanced developer experience\n- **ESBuild**: Fast JavaScript bundler for production builds\n- **PostCSS**: CSS processing with Tailwind integration\n\n### Validation and Utilities\n- **Zod**: Runtime schema validation\n- **Date-fns**: Date manipulation and formatting\n- **Class Variance Authority**: Type-safe utility for component variants\n- **Clsx**: Conditional CSS class composition\n\n### Session and Security\n- **Connect-pg-simple**: PostgreSQL session store for Express sessions\n- **Express session middleware**: User session management\n\nThe application is designed to be deployed on modern cloud platforms with support for both development and production environments. The modular architecture allows for easy scaling and maintenance while providing a robust foundation for educational geopolitical news analysis.","size_bytes":7588},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        chart: {\n          \"1\": \"var(--chart-1)\",\n          \"2\": \"var(--chart-2)\",\n          \"3\": \"var(--chart-3)\",\n          \"4\": \"var(--chart-4)\",\n          \"5\": \"var(--chart-5)\",\n        },\n        sidebar: {\n          DEFAULT: \"var(--sidebar-background)\",\n          foreground: \"var(--sidebar-foreground)\",\n          primary: \"var(--sidebar-primary)\",\n          \"primary-foreground\": \"var(--sidebar-primary-foreground)\",\n          accent: \"var(--sidebar-accent)\",\n          \"accent-foreground\": \"var(--sidebar-accent-foreground)\",\n          border: \"var(--sidebar-border)\",\n          ring: \"var(--sidebar-ring)\",\n        },\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":2627},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":971},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2066},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\nimport { categoryFilterSchema } from \"@shared/schema\";\nimport { z } from \"zod\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Get all news events with optional filtering\n  app.get(\"/api/news\", async (req, res) => {\n    try {\n      // Handle query parameters properly\n      const filter = Object.keys(req.query).length > 0 ? categoryFilterSchema.parse(req.query) : undefined;\n      const events = await storage.getNewsEvents(filter);\n      res.json(events);\n    } catch (error) {\n      console.error(\"Error fetching news events:\", error);\n      res.status(400).json({ error: \"Invalid filter parameters\" });\n    }\n  });\n\n  // Get specific news event\n  app.get(\"/api/news/:id\", async (req, res) => {\n    try {\n      const id = parseInt(req.params.id);\n      const event = await storage.getNewsEvent(id);\n      if (!event) {\n        return res.status(404).json({ error: \"Event not found\" });\n      }\n      res.json(event);\n    } catch (error) {\n      res.status(400).json({ error: \"Invalid event ID\" });\n    }\n  });\n\n  // Get analytics data\n  app.get(\"/api/analytics\", async (req, res) => {\n    try {\n      const analytics = await storage.getAnalytics();\n      res.json(analytics);\n    } catch (error) {\n      res.status(500).json({ error: \"Failed to fetch analytics\" });\n    }\n  });\n\n  // Search events\n  app.get(\"/api/search\", async (req, res) => {\n    try {\n      const query = req.query.q as string;\n      if (!query) {\n        return res.status(400).json({ error: \"Query parameter 'q' is required\" });\n      }\n      const events = await storage.searchEvents(query);\n      res.json(events);\n    } catch (error) {\n      res.status(500).json({ error: \"Search failed\" });\n    }\n  });\n\n  // Get events by category\n  app.get(\"/api/category/:category\", async (req, res) => {\n    try {\n      const category = req.params.category;\n      const events = await storage.getEventsByCategory(category);\n      res.json(events);\n    } catch (error) {\n      res.status(500).json({ error: \"Failed to fetch events by category\" });\n    }\n  });\n\n  // Get events by country\n  app.get(\"/api/country/:country\", async (req, res) => {\n    try {\n      const country = req.params.country;\n      const events = await storage.getEventsByCountry(country);\n      res.json(events);\n    } catch (error) {\n      res.status(500).json({ error: \"Failed to fetch events by country\" });\n    }\n  });\n\n  // Generate study guide for an event\n  app.post(\"/api/study-guide/:eventId\", async (req, res) => {\n    try {\n      const eventId = parseInt(req.params.eventId);\n      const options = req.body || {};\n      \n      const studyGuide = await storage.generateStudyGuide(eventId, options);\n      if (!studyGuide) {\n        return res.status(404).json({ error: \"Event not found\" });\n      }\n      \n      res.json(studyGuide);\n    } catch (error) {\n      console.error(\"Error generating study guide:\", error);\n      res.status(500).json({ error: \"Failed to generate study guide\" });\n    }\n  });\n\n  // Get study guide for an event\n  app.get(\"/api/study-guide/:eventId\", async (req, res) => {\n    try {\n      const eventId = parseInt(req.params.eventId);\n      const studyGuide = await storage.generateStudyGuide(eventId);\n      \n      if (!studyGuide) {\n        return res.status(404).json({ error: \"Event not found or study guide not available\" });\n      }\n      \n      res.json(studyGuide);\n    } catch (error) {\n      console.error(\"Error fetching study guide:\", error);\n      res.status(500).json({ error: \"Failed to fetch study guide\" });\n    }\n  });\n\n  // Get all study guides\n  app.get(\"/api/study-guides\", async (req, res) => {\n    try {\n      const studyGuides = await storage.getAllStudyGuides();\n      res.json(studyGuides);\n    } catch (error) {\n      console.error(\"Error fetching study guides:\", error);\n      res.status(500).json({ error: \"Failed to fetch study guides\" });\n    }\n  });\n\n  const httpServer = createServer(app);\n  return httpServer;\n}\n","size_bytes":4074},"server/storage.ts":{"content":"import { type NewsEvent, type InsertNewsEvent, type CategoryFilter, type Analytics, type StudyGuide } from \"@shared/schema\";\nimport { comprehensiveNewsData } from \"../client/src/data/comprehensive-news-data\";\nimport { studyGuideGenerator } from \"./study-guide-generator\";\n\nexport interface IStorage {\n  getNewsEvents(filter?: CategoryFilter): Promise<NewsEvent[]>;\n  getNewsEvent(id: number): Promise<NewsEvent | undefined>;\n  createNewsEvent(event: InsertNewsEvent): Promise<NewsEvent>;\n  getAnalytics(): Promise<Analytics>;\n  searchEvents(query: string): Promise<NewsEvent[]>;\n  getEventsByCategory(category: string): Promise<NewsEvent[]>;\n  getEventsByCountry(country: string): Promise<NewsEvent[]>;\n  generateStudyGuide(eventId: number, options?: any): Promise<StudyGuide | null>;\n  getAllStudyGuides(): Promise<{ eventId: number; studyGuide: StudyGuide }[]>;\n}\n\nexport class MemStorage implements IStorage {\n  private events: Map<number, NewsEvent>;\n  private studyGuides: Map<number, StudyGuide>;\n\n  constructor() {\n    this.events = new Map();\n    this.studyGuides = new Map();\n    // Initialize with comprehensive sample data\n    comprehensiveNewsData.forEach(event => {\n      this.events.set(event.id, event);\n    });\n  }\n\n  async getNewsEvents(filter?: CategoryFilter): Promise<NewsEvent[]> {\n    let events = Array.from(this.events.values());\n\n    if (filter) {\n      if (filter.categories && filter.categories.length > 0) {\n        events = events.filter(event => filter.categories!.includes(event.category));\n      }\n\n      if (filter.sentiment && filter.sentiment.length > 0) {\n        events = events.filter(event => filter.sentiment!.includes(event.sentiment));\n      }\n\n      if (filter.search) {\n        const query = filter.search.toLowerCase();\n        events = events.filter(event => \n          event.title.toLowerCase().includes(query) ||\n          event.content.toLowerCase().includes(query) ||\n          event.location.country.toLowerCase().includes(query) ||\n          event.location.city.toLowerCase().includes(query)\n        );\n      }\n\n      if (filter.country) {\n        events = events.filter(event => \n          event.location.country.toLowerCase().includes(filter.country!.toLowerCase())\n        );\n      }\n\n      if (filter.minImpact !== undefined) {\n        events = events.filter(event => event.geopolitical_impact >= filter.minImpact!);\n      }\n\n      if (filter.maxImpact !== undefined) {\n        events = events.filter(event => event.geopolitical_impact <= filter.maxImpact!);\n      }\n\n      if (filter.dateRange) {\n        const start = filter.dateRange.start ? new Date(filter.dateRange.start) : null;\n        const end = filter.dateRange.end ? new Date(filter.dateRange.end) : null;\n        \n        events = events.filter(event => {\n          const eventDate = new Date(event.published_date);\n          if (start && eventDate < start) return false;\n          if (end && eventDate > end) return false;\n          return true;\n        });\n      }\n    }\n\n    return events.sort((a, b) => new Date(b.published_date).getTime() - new Date(a.published_date).getTime());\n  }\n\n  async getNewsEvent(id: number): Promise<NewsEvent | undefined> {\n    return this.events.get(id);\n  }\n\n  async createNewsEvent(insertEvent: InsertNewsEvent): Promise<NewsEvent> {\n    const event: NewsEvent = {\n      ...insertEvent,\n      created_at: new Date()\n    };\n    this.events.set(event.id, event);\n    return event;\n  }\n\n  async getAnalytics(): Promise<Analytics> {\n    const events = Array.from(this.events.values());\n    \n    // Calculate event distribution by category\n    const eventDistribution = events.reduce((acc, event) => {\n      acc[event.category] = (acc[event.category] || 0) + 1;\n      return acc;\n    }, {} as Record<string, number>);\n\n    // Calculate hotspots\n    const hotspots = [\n      {\n        region: \"Taiwan Strait\",\n        type: \"High Conflict Risk\",\n        score: 9.2,\n        riskLevel: \"Critical\"\n      },\n      {\n        region: \"South Asia\",\n        type: \"Climate Impact\",\n        score: 8.7,\n        riskLevel: \"High\"\n      },\n      {\n        region: \"Middle East\",\n        type: \"Diplomatic Activity\",\n        score: 7.9,\n        riskLevel: \"Medium\"\n      }\n    ];\n\n    return {\n      totalEvents: events.length,\n      hotspots: hotspots.length,\n      eventDistribution,\n      topHotspots: hotspots\n    };\n  }\n\n  async searchEvents(query: string): Promise<NewsEvent[]> {\n    return this.getNewsEvents({ search: query });\n  }\n\n  async getEventsByCategory(category: string): Promise<NewsEvent[]> {\n    return this.getNewsEvents({ categories: [category] });\n  }\n\n  async getEventsByCountry(country: string): Promise<NewsEvent[]> {\n    return this.getNewsEvents({ country });\n  }\n\n  async generateStudyGuide(eventId: number, options?: any): Promise<StudyGuide | null> {\n    const event = await this.getNewsEvent(eventId);\n    if (!event) {\n      return null;\n    }\n\n    // Check if study guide already exists\n    if (this.studyGuides.has(eventId)) {\n      return this.studyGuides.get(eventId)!;\n    }\n\n    // Generate new study guide\n    const studyGuide = await studyGuideGenerator.generateStudyGuide(event, options);\n    this.studyGuides.set(eventId, studyGuide);\n    \n    return studyGuide;\n  }\n\n  async getAllStudyGuides(): Promise<{ eventId: number; studyGuide: StudyGuide }[]> {\n    const results: { eventId: number; studyGuide: StudyGuide }[] = [];\n    \n    for (const [eventId, studyGuide] of this.studyGuides.entries()) {\n      results.push({ eventId, studyGuide });\n    }\n    \n    return results;\n  }\n}\n\nexport const storage = new MemStorage();\n","size_bytes":5604},"server/study-guide-generator.ts":{"content":"import { NewsEvent, StudyGuide } from '@shared/schema';\n\ninterface StudyGuideOptions {\n  examFocus: 'css' | 'issb' | 'sat' | 'general' | 'all';\n  difficultyLevel: 'basic' | 'intermediate' | 'advanced';\n  includeQuiz: boolean;\n}\n\nexport class StudyGuideGenerator {\n  \n  async generateStudyGuide(event: NewsEvent, options: StudyGuideOptions = {\n    examFocus: 'all',\n    difficultyLevel: 'intermediate',\n    includeQuiz: true\n  }): Promise<StudyGuide> {\n    \n    // Generate comprehensive study guide based on the news event\n    const studyGuide: StudyGuide = {\n      summary: this.generateSummary(event),\n      keywords: this.extractKeywords(event),\n      key_figures_data: this.generateKeyFiguresData(event),\n      discussion_questions: this.generateDiscussionQuestions(event, options.examFocus),\n      quiz_questions: options.includeQuiz ? this.generateQuizQuestions(event, options.difficultyLevel) : [],\n      vocabulary: this.generateVocabulary(event),\n      css_linkage: this.generateCSSLinkage(event),\n      exam_relevance: this.determineExamRelevance(event)\n    };\n\n    return studyGuide;\n  }\n\n  private generateSummary(event: NewsEvent): string {\n    // Create a concise, educational summary\n    const locationContext = `${event.location.city}, ${event.location.country}`;\n    const impactLevel = event.geopolitical_impact >= 8 ? 'significant' : event.geopolitical_impact >= 6 ? 'moderate' : 'limited';\n    \n    return `${event.ai_summary} This ${event.category} event in ${locationContext} has ${impactLevel} geopolitical implications with a ${event.sentiment.toLowerCase()} outlook. The situation involves key stakeholders including ${event.entities.countries.slice(0, 3).join(', ')} and demonstrates important patterns in contemporary international relations.`;\n  }\n\n  private extractKeywords(event: NewsEvent): string[] {\n    const keywords = new Set<string>();\n    \n    // Add category-specific keywords\n    keywords.add(event.category);\n    \n    // Add entity-based keywords\n    event.entities.countries.forEach(country => keywords.add(country));\n    if (event.entities.organizations) {\n      event.entities.organizations.forEach(org => keywords.add(org));\n    }\n    \n    // Add topic-based keywords\n    event.educational_context.related_topics.forEach(topic => keywords.add(topic));\n    \n    // Add sentiment and analysis keywords\n    keywords.add('geopolitics');\n    keywords.add('international relations');\n    \n    if (event.category === 'conflict') {\n      keywords.add('security');\n      keywords.add('military strategy');\n    } else if (event.category === 'diplomacy') {\n      keywords.add('bilateral relations');\n      keywords.add('multilateral cooperation');\n    } else if (event.category === 'economy') {\n      keywords.add('economic policy');\n      keywords.add('trade relations');\n    }\n    \n    return Array.from(keywords).slice(0, 8);\n  }\n\n  private generateKeyFiguresData(event: NewsEvent): string {\n    let data = '';\n    \n    // Countries involved\n    if (event.entities.countries.length > 0) {\n      data += `Countries involved: ${event.entities.countries.join(', ')}. `;\n    }\n    \n    // Key people\n    if (event.entities.people && event.entities.people.length > 0) {\n      data += `Key figures: ${event.entities.people.join(', ')}. `;\n    }\n    \n    // Organizations\n    if (event.entities.organizations && event.entities.organizations.length > 0) {\n      data += `Organizations: ${event.entities.organizations.join(', ')}. `;\n    }\n    \n    // Impact metrics\n    data += `Geopolitical Impact Score: ${event.geopolitical_impact}/10. `;\n    data += `Conflict Escalation Risk: ${Math.round(event.conflict_escalation_probability * 100)}%. `;\n    data += `Economic Impact: ${event.economic_impact}/10.`;\n    \n    return data.trim();\n  }\n\n  private generateDiscussionQuestions(event: NewsEvent, examFocus: string): string[] {\n    const questions: string[] = [];\n    \n    // General analysis questions\n    questions.push(`What are the primary causes and contributing factors behind this ${event.category} situation?`);\n    questions.push(`How might this event affect regional stability and international relations?`);\n    \n    // Category-specific questions\n    if (event.category === 'conflict') {\n      questions.push('What diplomatic solutions could help de-escalate this situation?');\n      questions.push('How do international law and treaties apply to this conflict?');\n    } else if (event.category === 'diplomacy') {\n      questions.push('What are the potential long-term benefits and risks of this diplomatic initiative?');\n      questions.push('How does this diplomatic engagement align with broader foreign policy objectives?');\n    } else if (event.category === 'economy') {\n      questions.push('What are the economic implications for both domestic and international stakeholders?');\n      questions.push('How might this economic development influence global trade patterns?');\n    }\n    \n    // Exam-specific questions\n    if (examFocus === 'css' || examFocus === 'all') {\n      questions.push('How does this event relate to Pakistan\\'s foreign policy interests and strategic objectives?');\n      questions.push('What lessons can be drawn for policy-making and governance?');\n    }\n    \n    if (examFocus === 'issb' || examFocus === 'all') {\n      questions.push('What strategic intelligence and security considerations arise from this situation?');\n      questions.push('How should military and security forces adapt to these developments?');\n    }\n    \n    return questions.slice(0, 6);\n  }\n\n  private generateQuizQuestions(event: NewsEvent, difficulty: string): StudyGuide['quiz_questions'] {\n    const questions: StudyGuide['quiz_questions'] = [];\n    \n    // Basic knowledge question\n    questions.push({\n      question: `Which country is primarily featured in this ${event.category} event?`,\n      type: 'multiple_choice',\n      options: [\n        event.location.country,\n        'United States',\n        'United Kingdom',\n        'Germany'\n      ].sort(() => Math.random() - 0.5),\n      correct_answer: event.location.country,\n      explanation: `The event took place in ${event.location.city}, ${event.location.country}.`\n    });\n    \n    // True/False question\n    const highImpact = event.geopolitical_impact >= 7;\n    questions.push({\n      question: `This event has a high geopolitical impact (score above 7.0).`,\n      type: 'true_false',\n      options: ['True', 'False'],\n      correct_answer: highImpact ? 'True' : 'False',\n      explanation: `The geopolitical impact score is ${event.geopolitical_impact}/10, which is ${highImpact ? 'above' : 'below'} the 7.0 threshold.`\n    });\n    \n    // Category knowledge\n    questions.push({\n      question: `What category best describes this news event?`,\n      type: 'multiple_choice',\n      options: ['conflict', 'diplomacy', 'economy', 'innovation'].includes(event.category) \n        ? ['conflict', 'diplomacy', 'economy', 'innovation']\n        : [event.category, 'conflict', 'diplomacy', 'economy'],\n      correct_answer: event.category,\n      explanation: `This is a ${event.category} event based on its primary characteristics and implications.`\n    });\n    \n    if (difficulty === 'advanced') {\n      // Complex analysis question\n      questions.push({\n        question: `What is the approximate conflict escalation probability for this situation?`,\n        type: 'multiple_choice',\n        options: [\n          `${Math.round(event.conflict_escalation_probability * 100)}%`,\n          '25%',\n          '50%',\n          '90%'\n        ].sort(() => Math.random() - 0.5),\n        correct_answer: `${Math.round(event.conflict_escalation_probability * 100)}%`,\n        explanation: `The AI analysis indicates a ${Math.round(event.conflict_escalation_probability * 100)}% probability of conflict escalation based on current factors.`\n      });\n    }\n    \n    return questions;\n  }\n\n  private generateVocabulary(event: NewsEvent): StudyGuide['vocabulary'] {\n    const vocabulary: StudyGuide['vocabulary'] = [];\n    \n    // Category-specific terms\n    if (event.category === 'conflict') {\n      vocabulary.push(\n        { term: 'Geopolitics', definition: 'Politics influenced by geography, especially in international relations and military strategy.' },\n        { term: 'Escalation', definition: 'The process of increasing intensity or scope of a conflict or crisis.' },\n        { term: 'De-escalation', definition: 'Actions taken to reduce tension and prevent conflict from intensifying.' }\n      );\n    } else if (event.category === 'diplomacy') {\n      vocabulary.push(\n        { term: 'Bilateral Relations', definition: 'Political, economic, or cultural relations between two countries.' },\n        { term: 'Multilateral Cooperation', definition: 'Collaboration involving multiple countries or international organizations.' },\n        { term: 'Foreign Policy', definition: 'A government\\'s strategy in dealing with other nations.' }\n      );\n    } else if (event.category === 'economy') {\n      vocabulary.push(\n        { term: 'Economic Sanctions', definition: 'Restrictions placed on trade and financial transactions for political reasons.' },\n        { term: 'Trade Relations', definition: 'Commercial and economic exchanges between countries.' },\n        { term: 'Economic Integration', definition: 'The process of reducing barriers to trade and investment between economies.' }\n      );\n    }\n    \n    // Add general IR terms\n    vocabulary.push(\n      { term: 'International Relations', definition: 'The study of relationships between countries, including politics, economics, and security.' },\n      { term: 'Regional Stability', definition: 'The maintenance of peace and predictable relations within a geographic region.' }\n    );\n    \n    return vocabulary.slice(0, 5);\n  }\n\n  private generateCSSLinkage(event: NewsEvent): string[] {\n    const linkages: string[] = [];\n    \n    // Always relevant subjects\n    linkages.push('Current Affairs');\n    linkages.push('International Relations');\n    \n    // Category-specific linkages\n    if (event.category === 'conflict' || event.category === 'diplomacy') {\n      linkages.push('Foreign Policy');\n      linkages.push('Strategic Studies');\n    }\n    \n    if (event.category === 'economy') {\n      linkages.push('Economics');\n      linkages.push('Public Administration');\n    }\n    \n    if (event.category === 'politics') {\n      linkages.push('Political Science');\n      linkages.push('Governance and Public Policy');\n    }\n    \n    // Pakistan-specific subjects if relevant\n    if (event.entities.countries.includes('Pakistan') || \n        event.location.country === 'Pakistan' ||\n        event.entities.countries.some(country => ['India', 'China', 'Afghanistan', 'Iran'].includes(country))) {\n      linkages.push('Pakistan Affairs');\n      linkages.push('Regional Studies');\n    }\n    \n    return [...new Set(linkages)];\n  }\n\n  private determineExamRelevance(event: NewsEvent): StudyGuide['exam_relevance'] {\n    return {\n      css: true, // All current affairs events are relevant for CSS\n      issb: event.category === 'conflict' || event.category === 'innovation' || \n            event.entities.countries.includes('Pakistan'),\n      sat: event.category === 'innovation' || event.category === 'climate' ||\n           event.geopolitical_impact >= 8,\n      general_current_affairs: true // All events are relevant for general current affairs\n    };\n  }\n}\n\nexport const studyGuideGenerator = new StudyGuideGenerator();","size_bytes":11476},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar, jsonb, real, timestamp, integer, boolean } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\n// Location schema\nconst locationSchema = z.object({\n  country: z.string(),\n  city: z.string(),\n  latitude: z.number(),\n  longitude: z.number()\n});\n\n// Entities schema\nconst entitiesSchema = z.object({\n  countries: z.array(z.string()),\n  people: z.array(z.string()).optional(),\n  organizations: z.array(z.string()).optional()\n});\n\n// Educational context schema\nconst educationalContextSchema = z.object({\n  learning_objectives: z.array(z.string()),\n  related_topics: z.array(z.string())\n});\n\n// Study guide schema\nconst studyGuideSchema = z.object({\n  summary: z.string(),\n  keywords: z.array(z.string()),\n  key_figures_data: z.string(),\n  discussion_questions: z.array(z.string()),\n  quiz_questions: z.array(z.object({\n    question: z.string(),\n    type: z.enum(['multiple_choice', 'true_false', 'short_answer']),\n    options: z.array(z.string()).optional(),\n    correct_answer: z.string(),\n    explanation: z.string()\n  })),\n  vocabulary: z.array(z.object({\n    term: z.string(),\n    definition: z.string()\n  })),\n  css_linkage: z.array(z.string()),\n  exam_relevance: z.object({\n    css: z.boolean(),\n    issb: z.boolean(),\n    sat: z.boolean(),\n    general_current_affairs: z.boolean()\n  })\n});\n\nexport const newsEvents = pgTable(\"news_events\", {\n  id: integer(\"id\").primaryKey(),\n  title: text(\"title\").notNull(),\n  source: text(\"source\").notNull(),\n  published_date: text(\"published_date\").notNull(),\n  content: text(\"content\").notNull(),\n  location: jsonb(\"location\").$type<z.infer<typeof locationSchema>>().notNull(),\n  category: text(\"category\").notNull(),\n  entities: jsonb(\"entities\").$type<z.infer<typeof entitiesSchema>>().notNull(),\n  ai_summary: text(\"ai_summary\").notNull(),\n  tags: jsonb(\"tags\").$type<string[]>().notNull(),\n  sentiment: text(\"sentiment\").notNull(),\n  sentiment_score: real(\"sentiment_score\").notNull(),\n  geopolitical_impact: real(\"geopolitical_impact\").notNull(),\n  conflict_escalation_probability: real(\"conflict_escalation_probability\").notNull(),\n  economic_impact: real(\"economic_impact\").notNull(),\n  educational_context: jsonb(\"educational_context\").$type<z.infer<typeof educationalContextSchema>>().notNull(),\n  trend_analysis: text(\"trend_analysis\").notNull(),\n  related_events: jsonb(\"related_events\").$type<number[]>().default([]),\n  study_guide: jsonb(\"study_guide\").$type<z.infer<typeof studyGuideSchema>>(),\n  created_at: timestamp(\"created_at\").default(sql`now()`).notNull()\n});\n\nexport const insertNewsEventSchema = createInsertSchema(newsEvents).omit({\n  created_at: true\n});\n\nexport type InsertNewsEvent = z.infer<typeof insertNewsEventSchema>;\nexport type NewsEvent = typeof newsEvents.$inferSelect;\n\n// Filter schemas\nexport const categoryFilterSchema = z.object({\n  categories: z.array(z.string()).optional(),\n  sentiment: z.array(z.string()).optional(),\n  dateRange: z.object({\n    start: z.string().optional(),\n    end: z.string().optional()\n  }).optional(),\n  search: z.string().optional(),\n  country: z.string().optional(),\n  minImpact: z.number().optional(),\n  maxImpact: z.number().optional()\n});\n\nexport type CategoryFilter = z.infer<typeof categoryFilterSchema>;\n\n// Analytics schemas\nexport const analyticsSchema = z.object({\n  totalEvents: z.number(),\n  hotspots: z.number(),\n  eventDistribution: z.record(z.number()),\n  topHotspots: z.array(z.object({\n    region: z.string(),\n    type: z.string(),\n    score: z.number(),\n    riskLevel: z.string()\n  }))\n});\n\nexport type Analytics = z.infer<typeof analyticsSchema>;\nexport type StudyGuide = z.infer<typeof studyGuideSchema>;\n","size_bytes":3755},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport Home from \"@/pages/home\";\nimport NotFound from \"@/pages/not-found\";\n\nfunction Router() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={Home} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        <Toaster />\n        <Router />\n      </TooltipProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":699},"client/src/index.css":{"content":"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --background: hsl(0, 0%, 100%);\n  --foreground: hsl(20, 14.3%, 4.1%);\n  --muted: hsl(60, 4.8%, 95.9%);\n  --muted-foreground: hsl(25, 5.3%, 44.7%);\n  --popover: hsl(0, 0%, 100%);\n  --popover-foreground: hsl(20, 14.3%, 4.1%);\n  --card: hsl(0, 0%, 100%);\n  --card-foreground: hsl(20, 14.3%, 4.1%);\n  --border: hsl(20, 5.9%, 90%);\n  --input: hsl(20, 5.9%, 90%);\n  --primary: hsl(207, 90%, 54%);\n  --primary-foreground: hsl(211, 100%, 99%);\n  --secondary: hsl(60, 4.8%, 95.9%);\n  --secondary-foreground: hsl(24, 9.8%, 10%);\n  --accent: hsl(60, 4.8%, 95.9%);\n  --accent-foreground: hsl(24, 9.8%, 10%);\n  --destructive: hsl(0, 84.2%, 60.2%);\n  --destructive-foreground: hsl(60, 9.1%, 97.8%);\n  --ring: hsl(20, 14.3%, 4.1%);\n  --radius: 0.5rem;\n  \n  /* Educational color palette for event categories */\n  --conflict-color: hsl(0, 84%, 60%);\n  --diplomacy-color: hsl(142, 69%, 58%);\n  --disaster-color: hsl(35, 91%, 62%);\n  --innovation-color: hsl(249, 79%, 69%);\n  --politics-color: hsl(213, 94%, 68%);\n  --economy-color: hsl(160, 84%, 39%);\n  --health-color: hsl(322, 79%, 67%);\n  --climate-color: hsl(79, 70%, 55%);\n}\n\n.dark {\n  --background: hsl(240, 10%, 3.9%);\n  --foreground: hsl(0, 0%, 98%);\n  --muted: hsl(240, 3.7%, 15.9%);\n  --muted-foreground: hsl(240, 5%, 64.9%);\n  --popover: hsl(240, 10%, 3.9%);\n  --popover-foreground: hsl(0, 0%, 98%);\n  --card: hsl(240, 10%, 3.9%);\n  --card-foreground: hsl(0, 0%, 98%);\n  --border: hsl(240, 3.7%, 15.9%);\n  --input: hsl(240, 3.7%, 15.9%);\n  --primary: hsl(207, 90%, 54%);\n  --primary-foreground: hsl(211, 100%, 99%);\n  --secondary: hsl(240, 3.7%, 15.9%);\n  --secondary-foreground: hsl(0, 0%, 98%);\n  --accent: hsl(240, 3.7%, 15.9%);\n  --accent-foreground: hsl(0, 0%, 98%);\n  --destructive: hsl(0, 62.8%, 30.6%);\n  --destructive-foreground: hsl(0, 0%, 98%);\n  --ring: hsl(240, 4.9%, 83.9%);\n  --radius: 0.5rem;\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n  }\n}\n\n@layer components {\n  .educational-card {\n    @apply bg-white rounded-lg shadow-sm border border-slate-200 transition-all hover:shadow-md;\n  }\n  \n  .category-badge-conflict {\n    @apply bg-red-100 text-red-700 hover:bg-red-200;\n  }\n  \n  .category-badge-diplomacy {\n    @apply bg-green-100 text-green-700 hover:bg-green-200;\n  }\n  \n  .category-badge-disaster {\n    @apply bg-orange-100 text-orange-700 hover:bg-orange-200;\n  }\n  \n  .category-badge-innovation {\n    @apply bg-purple-100 text-purple-700 hover:bg-purple-200;\n  }\n  \n  .category-badge-politics {\n    @apply bg-blue-100 text-blue-700 hover:bg-blue-200;\n  }\n  \n  .category-badge-economy {\n    @apply bg-teal-100 text-teal-700 hover:bg-teal-200;\n  }\n  \n  .category-badge-health {\n    @apply bg-pink-100 text-pink-700 hover:bg-pink-200;\n  }\n  \n  .category-badge-climate {\n    @apply bg-lime-100 text-lime-700 hover:bg-lime-200;\n  }\n}\n\n/* Map specific styles */\n.leaflet-container {\n  height: 100%;\n  width: 100%;\n  background: #f8fafc;\n}\n\n.leaflet-popup-content {\n  margin: 0;\n  padding: 0;\n}\n\n.leaflet-popup-content-wrapper {\n  border-radius: 8px;\n  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);\n}\n\n/* Timeline slider styling */\n.slider {\n  -webkit-appearance: none;\n  appearance: none;\n  background: transparent;\n  cursor: pointer;\n}\n\n.slider::-webkit-slider-track {\n  background: hsl(220, 13%, 91%);\n  height: 8px;\n  border-radius: 4px;\n}\n\n.slider::-webkit-slider-thumb {\n  -webkit-appearance: none;\n  appearance: none;\n  background: hsl(207, 90%, 54%);\n  height: 20px;\n  width: 20px;\n  border-radius: 50%;\n  cursor: pointer;\n  margin-top: -6px;\n}\n\n.slider::-moz-range-track {\n  background: hsl(220, 13%, 91%);\n  height: 8px;\n  border-radius: 4px;\n  border: none;\n}\n\n.slider::-moz-range-thumb {\n  background: hsl(207, 90%, 54%);\n  height: 20px;\n  width: 20px;\n  border-radius: 50%;\n  cursor: pointer;\n  border: none;\n}\n\n/* Animation for loading states */\n@keyframes pulse {\n  0%, 100% {\n    opacity: 1;\n  }\n  50% {\n    opacity: 0.5;\n  }\n}\n\n.animate-pulse {\n  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;\n}\n\n/* Responsive design for educational settings */\n@media (max-width: 768px) {\n  .leaflet-control-container {\n    display: none;\n  }\n  \n  .sidebar-panel {\n    width: 100%;\n    height: 40vh;\n    position: fixed;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    border-radius: 16px 16px 0 0;\n    box-shadow: 0 -4px 25px rgba(0, 0, 0, 0.1);\n  }\n}\n\n/* Accessibility improvements */\n@media (prefers-reduced-motion: reduce) {\n  * {\n    animation-duration: 0.01ms !important;\n    animation-iteration-count: 1 !important;\n    transition-duration: 0.01ms !important;\n  }\n}\n\n/* Focus styles for keyboard navigation */\nbutton:focus-visible,\ninput:focus-visible,\nselect:focus-visible {\n  outline: 2px solid hsl(207, 90%, 54%);\n  outline-offset: 2px;\n}\n\n/* Print styles for educational materials */\n@media print {\n  .no-print {\n    display: none !important;\n  }\n  \n  .leaflet-container {\n    background: white !important;\n  }\n  \n  .educational-card {\n    break-inside: avoid;\n    margin-bottom: 16px;\n  }\n}\n","size_bytes":5125},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/data/comprehensive-news-data.ts":{"content":"import { NewsEvent } from \"@shared/schema\";\n\nexport const comprehensiveNewsData: NewsEvent[] = [\n  {\n    id: 1,\n    title: \"Tensions Escalate Between China and Taiwan After Military Drills\",\n    source: \"Reuters\",\n    published_date: \"2025-08-03\",\n    content: \"China conducted large-scale military drills around Taiwan's airspace and waters, involving over 150 aircraft and 30 naval vessels in the largest display of force this year. The exercises simulated blockade scenarios and amphibious assault training, raising concerns among regional allies about potential invasion preparations.\",\n    location: { country: \"Taiwan\", city: \"Taipei\", latitude: 25.0330, longitude: 121.5654 },\n    category: \"conflict\",\n    entities: { \n      countries: [\"China\", \"Taiwan\", \"United States\", \"Japan\"], \n      people: [\"Xi Jinping\", \"William Lai\", \"Antony Blinken\"],\n      organizations: [\"PLA\", \"Taiwan Defense Ministry\", \"QUAD Alliance\"]\n    },\n    ai_summary: \"China's unprecedented military exercises near Taiwan signal heightened cross-strait tensions. The drills demonstrate Beijing's capability for rapid mobilization while testing regional alliance responses and international resolve.\",\n    tags: [\"Military\", \"Asia-Pacific\", \"Geopolitics\", \"Strategic Competition\"],\n    sentiment: \"Negative\",\n    sentiment_score: 0.92,\n    geopolitical_impact: 9.5,\n    conflict_escalation_probability: 0.78,\n    economic_impact: 8.7,\n    educational_context: {\n      learning_objectives: [\n        \"Analyze cross-strait relations and One China Policy implications\",\n        \"Evaluate regional security architecture in Asia-Pacific\",\n        \"Understand military deterrence strategies and alliance dynamics\"\n      ],\n      related_topics: [\"Taiwan Strait Crisis\", \"Regional Security\", \"Great Power Competition\", \"Military Strategy\"]\n    },\n    trend_analysis: \"Escalating pattern with 40% increase in military activities over 6 months, indicating strategic shift toward more assertive posture\",\n    related_events: [2, 11, 19],\n    created_at: new Date()\n  },\n  {\n    id: 2,\n    title: \"UN Hosts Global Summit on Climate Action in Geneva\",\n    source: \"BBC\",\n    published_date: \"2025-08-01\",\n    content: \"World leaders gathered in Geneva for a critical climate summit, securing commitments for $300 billion in climate financing and establishing new carbon reduction targets. The summit addressed adaptation strategies for vulnerable nations and breakthrough agreements on renewable energy transition timelines.\",\n    location: { country: \"Switzerland\", city: \"Geneva\", latitude: 46.2044, longitude: 6.1432 },\n    category: \"diplomacy\",\n    entities: { \n      countries: [\"Switzerland\", \"India\", \"Brazil\", \"France\", \"Germany\", \"Maldives\"], \n      organizations: [\"United Nations\", \"IPCC\", \"Green Climate Fund\"],\n      people: [\"António Guterres\", \"Narendra Modi\", \"Emmanuel Macron\"]\n    },\n    ai_summary: \"Historic climate agreement achieved with unprecedented financial commitments and binding emission targets. The summit demonstrates renewed multilateral cooperation on existential global challenges.\",\n    tags: [\"Climate\", \"Diplomacy\", \"Environment\", \"Multilateralism\"],\n    sentiment: \"Positive\",\n    sentiment_score: 0.87,\n    geopolitical_impact: 8.9,\n    conflict_escalation_probability: 0.05,\n    economic_impact: 9.2,\n    educational_context: {\n      learning_objectives: [\n        \"Examine multilateral climate governance mechanisms\",\n        \"Analyze climate finance and technology transfer frameworks\",\n        \"Evaluate small island state vulnerability and adaptation strategies\"\n      ],\n      related_topics: [\"Paris Agreement\", \"Climate Justice\", \"Global Governance\", \"Sustainable Development\"]\n    },\n    trend_analysis: \"Positive momentum building with increased climate ambition post-COP28, showing 65% improvement in international cooperation\",\n    related_events: [8, 15, 18],\n    created_at: new Date()\n  },\n  {\n    id: 3,\n    title: \"Deadly Earthquake Hits Northern Japan\",\n    source: \"NHK World\",\n    published_date: \"2025-07-28\",\n    content: \"A devastating 7.4 magnitude earthquake struck northern Japan, causing widespread destruction and triggering tsunami warnings across the Pacific Rim. The disaster has resulted in over 200 casualties and displaced thousands, highlighting Japan's ongoing seismic vulnerabilities despite advanced preparedness systems.\",\n    location: { country: \"Japan\", city: \"Sendai\", latitude: 38.2682, longitude: 140.8694 },\n    category: \"disaster\",\n    entities: { \n      countries: [\"Japan\", \"South Korea\", \"Philippines\"], \n      organizations: [\"Japan Meteorological Agency\", \"Japanese Red Cross\", \"Pacific Tsunami Warning Center\"],\n      people: [\"Fumio Kishida\", \"Emperor Naruhito\"]\n    },\n    ai_summary: \"Major earthquake demonstrates Japan's disaster preparedness capabilities while revealing ongoing vulnerabilities. International humanitarian coordination showcases regional cooperation in crisis response.\",\n    tags: [\"Natural Disaster\", \"Emergency Response\", \"Asia\", \"Tsunami\"],\n    sentiment: \"Negative\",\n    sentiment_score: 0.94,\n    geopolitical_impact: 6.8,\n    conflict_escalation_probability: 0.02,\n    economic_impact: 8.5,\n    educational_context: {\n      learning_objectives: [\n        \"Understand seismic activity patterns in the Pacific Ring of Fire\",\n        \"Analyze disaster preparedness and early warning systems\",\n        \"Evaluate international humanitarian response coordination\"\n      ],\n      related_topics: [\"Plate Tectonics\", \"Disaster Risk Reduction\", \"Emergency Management\", \"Regional Cooperation\"]\n    },\n    trend_analysis: \"Increased seismic activity correlates with broader Pacific Rim geological instability patterns over past decade\",\n    related_events: [9, 16, 20],\n    created_at: new Date()\n  },\n  {\n    id: 4,\n    title: \"Germany Launches Revolutionary Hydrogen Rail Network\",\n    source: \"Deutsche Welle\",\n    published_date: \"2025-07-25\",\n    content: \"Germany inaugurated the world's first nationwide hydrogen-powered passenger rail network, connecting 500 stations across the country. The €15 billion infrastructure project represents a major breakthrough in sustainable transportation, eliminating 2.8 million tons of CO2 emissions annually while creating 50,000 green jobs.\",\n    location: { country: \"Germany\", city: \"Berlin\", latitude: 52.5200, longitude: 13.4050 },\n    category: \"innovation\",\n    entities: { \n      countries: [\"Germany\", \"Netherlands\", \"Denmark\"], \n      organizations: [\"Deutsche Bahn\", \"Siemens\", \"European Green Deal\"],\n      people: [\"Olaf Scholz\", \"Ursula von der Leyen\"]\n    },\n    ai_summary: \"Germany's hydrogen rail revolution sets global precedent for decarbonized transportation systems. The initiative demonstrates large-scale green technology deployment and creates blueprint for sustainable mobility transformation.\",\n    tags: [\"Green Technology\", \"Transportation\", \"Innovation\", \"Sustainability\"],\n    sentiment: \"Positive\",\n    sentiment_score: 0.93,\n    geopolitical_impact: 7.8,\n    conflict_escalation_probability: 0.01,\n    economic_impact: 8.9,\n    educational_context: {\n      learning_objectives: [\n        \"Examine renewable energy applications in transportation infrastructure\",\n        \"Analyze economic transformation through green technology adoption\",\n        \"Evaluate policy frameworks for sustainable development goals\"\n      ],\n      related_topics: [\"Energy Transition\", \"Green Technology\", \"Industrial Policy\", \"Climate Action\"]\n    },\n    trend_analysis: \"Accelerating hydrogen economy development with 200% increase in infrastructure investments across Europe\",\n    related_events: [10, 12, 17],\n    created_at: new Date()\n  },\n  {\n    id: 5,\n    title: \"Severe Flooding Affects Millions in Bangladesh\",\n    source: \"Al Jazeera\",\n    published_date: \"2025-08-02\",\n    content: \"Record monsoon rains have caused catastrophic flooding across Bangladesh, displacing over 6 million people and submerging one-third of the country. The climate-induced disaster has destroyed 1.2 million homes and threatens food security for 45 million people, highlighting Bangladesh's extreme climate vulnerability.\",\n    location: { country: \"Bangladesh\", city: \"Dhaka\", latitude: 23.8103, longitude: 90.4125 },\n    category: \"disaster\",\n    entities: { \n      countries: [\"Bangladesh\", \"India\", \"Myanmar\"], \n      organizations: [\"UNICEF\", \"World Food Programme\", \"Red Crescent\"],\n      people: [\"Sheikh Hasina\", \"Antonio Guterres\"]\n    },\n    ai_summary: \"Bangladesh flooding crisis exemplifies climate change impacts on vulnerable populations. The disaster reveals urgent need for climate adaptation financing and regional cooperation on transboundary water management.\",\n    tags: [\"Climate Change\", \"Humanitarian Crisis\", \"South Asia\", \"Flooding\"],\n    sentiment: \"Negative\",\n    sentiment_score: 0.91,\n    geopolitical_impact: 7.4,\n    conflict_escalation_probability: 0.28,\n    economic_impact: 8.6,\n    educational_context: {\n      learning_objectives: [\n        \"Analyze climate vulnerability and adaptation strategies in deltaic regions\",\n        \"Examine humanitarian response coordination mechanisms\",\n        \"Understand transboundary water governance challenges\"\n      ],\n      related_topics: [\"Climate Adaptation\", \"Human Security\", \"Water Diplomacy\", \"Development Resilience\"]\n    },\n    trend_analysis: \"Intensifying extreme weather events with 85% increase in flood frequency over past two decades\",\n    related_events: [3, 15, 18],\n    created_at: new Date()\n  },\n  {\n    id: 6,\n    title: \"NASA Announces Successful Moon Water Extraction Test\",\n    source: \"NASA\",\n    published_date: \"2025-07-30\",\n    content: \"NASA's Artemis program achieved a historic milestone by successfully extracting and purifying 1,000 liters of water from lunar ice deposits. The breakthrough technology enables sustainable lunar habitation and serves as a stepping stone for Mars exploration, representing humanity's greatest space achievement since Apollo.\",\n    location: { country: \"United States\", city: \"Cape Canaveral\", latitude: 28.3922, longitude: -80.6077 },\n    category: \"innovation\",\n    entities: { \n      countries: [\"United States\", \"Canada\", \"Japan\", \"Italy\"], \n      organizations: [\"NASA\", \"SpaceX\", \"ESA\", \"CSA\"],\n      people: [\"Bill Nelson\", \"Elon Musk\", \"Samantha Cristoforetti\"]\n    },\n    ai_summary: \"Lunar water extraction breakthrough revolutionizes space exploration capabilities. The achievement establishes foundation for permanent lunar presence and interplanetary exploration while advancing international space cooperation.\",\n    tags: [\"Space Exploration\", \"Technology\", \"International Cooperation\", \"Scientific Discovery\"],\n    sentiment: \"Positive\",\n    sentiment_score: 0.96,\n    geopolitical_impact: 8.7,\n    conflict_escalation_probability: 0.01,\n    economic_impact: 9.4,\n    educational_context: {\n      learning_objectives: [\n        \"Understand space resource utilization and in-situ resource utilization\",\n        \"Analyze international space law and cooperation frameworks\",\n        \"Examine technological innovation in extreme environments\"\n      ],\n      related_topics: [\"Space Technology\", \"International Treaties\", \"Scientific Collaboration\", \"Resource Economics\"]\n    },\n    trend_analysis: \"Accelerating space commercialization with 300% increase in lunar mission planning globally\",\n    related_events: [19, 20, 12],\n    created_at: new Date()\n  },\n  {\n    id: 7,\n    title: \"Measles Outbreak Declared in Central Africa\",\n    source: \"WHO\",\n    published_date: \"2025-08-04\",\n    content: \"The World Health Organization declared a public health emergency as measles outbreaks spread across five Central African nations, affecting over 150,000 people with a mortality rate of 6%. Vaccination campaigns face challenges from conflict zones, logistics constraints, and vaccine hesitancy, threatening regional health security.\",\n    location: { country: \"Democratic Republic of Congo\", city: \"Kinshasa\", latitude: -4.4419, longitude: 15.2663 },\n    category: \"health\",\n    entities: { \n      countries: [\"DR Congo\", \"Chad\", \"Central African Republic\", \"Cameroon\"], \n      organizations: [\"WHO\", \"Médecins Sans Frontières\", \"GAVI\", \"UNICEF\"],\n      people: [\"Tedros Adhanom\", \"Matshidiso Moeti\"]\n    },\n    ai_summary: \"Central Africa measles outbreak highlights critical gaps in health system resilience and vaccination coverage. The crisis demands coordinated international response and long-term health infrastructure investment.\",\n    tags: [\"Public Health\", \"Disease Outbreak\", \"Africa\", \"Vaccination\"],\n    sentiment: \"Negative\",\n    sentiment_score: 0.88,\n    geopolitical_impact: 6.9,\n    conflict_escalation_probability: 0.18,\n    economic_impact: 7.1,\n    educational_context: {\n      learning_objectives: [\n        \"Examine global health security and disease surveillance systems\",\n        \"Analyze vaccine equity and distribution challenges\",\n        \"Understand health system strengthening in conflict-affected regions\"\n      ],\n      related_topics: [\"Global Health\", \"Vaccine Diplomacy\", \"Health Security\", \"Humanitarian Access\"]\n    },\n    trend_analysis: \"Declining vaccination rates in conflict zones with 35% decrease in routine immunization coverage\",\n    related_events: [13, 14, 16],\n    created_at: new Date()\n  },\n  {\n    id: 8,\n    title: \"UK and EU Sign New Trade Agreement\",\n    source: \"Financial Times\",\n    published_date: \"2025-07-31\",\n    content: \"The United Kingdom and European Union finalized a comprehensive trade enhancement agreement, reducing barriers on £650 billion in annual trade. The deal includes mutual recognition of professional qualifications, streamlined customs procedures, and enhanced cooperation on financial services, marking a new chapter in post-Brexit relations.\",\n    location: { country: \"United Kingdom\", city: \"London\", latitude: 51.5074, longitude: -0.1278 },\n    category: \"diplomacy\",\n    entities: { \n      countries: [\"United Kingdom\", \"France\", \"Germany\", \"Ireland\"], \n      organizations: [\"European Commission\", \"UK Parliament\", \"City of London\"],\n      people: [\"Keir Starmer\", \"Ursula von der Leyen\", \"Emmanuel Macron\"]\n    },\n    ai_summary: \"UK-EU trade agreement represents pragmatic reset in post-Brexit relationship. The deal balances sovereignty concerns with economic integration, creating model for third-country EU partnerships.\",\n    tags: [\"Trade\", \"Brexit\", \"European Relations\", \"Economic Integration\"],\n    sentiment: \"Positive\",\n    sentiment_score: 0.84,\n    geopolitical_impact: 8.1,\n    conflict_escalation_probability: 0.03,\n    economic_impact: 9.1,\n    educational_context: {\n      learning_objectives: [\n        \"Analyze post-Brexit relationship evolution and trade policy\",\n        \"Examine regional integration versus national sovereignty tensions\",\n        \"Evaluate economic diplomacy and negotiation strategies\"\n      ],\n      related_topics: [\"European Integration\", \"Trade Policy\", \"Brexit Impact\", \"Economic Sovereignty\"]\n    },\n    trend_analysis: \"Improving UK-EU relations with 45% increase in cooperative initiatives since 2024 election\",\n    related_events: [2, 14, 17],\n    created_at: new Date()\n  },\n  {\n    id: 9,\n    title: \"Wildfires Rage Across Western Canada\",\n    source: \"CBC News\",\n    published_date: \"2025-08-01\",\n    content: \"Unprecedented wildfires continue burning across British Columbia and Alberta, destroying 2.8 million hectares and forcing 85,000 people to evacuate. The fires have released 180 million tons of CO2, creating air quality emergencies across North America and highlighting accelerating climate change impacts.\",\n    location: { country: \"Canada\", city: \"Vancouver\", latitude: 49.2827, longitude: -123.1207 },\n    category: \"disaster\",\n    entities: { \n      countries: [\"Canada\", \"United States\"], \n      organizations: [\"BC Wildfire Service\", \"Canadian Forces\", \"FEMA\"],\n      people: [\"Justin Trudeau\", \"David Eby\"]\n    },\n    ai_summary: \"Canadian wildfire crisis demonstrates climate change acceleration in boreal regions. The disaster requires enhanced international firefighting cooperation and long-term forest management adaptation strategies.\",\n    tags: [\"Wildfire\", \"Climate Change\", \"Emergency Response\", \"Environmental Crisis\"],\n    sentiment: \"Negative\",\n    sentiment_score: 0.89,\n    geopolitical_impact: 6.2,\n    conflict_escalation_probability: 0.06,\n    economic_impact: 8.4,\n    educational_context: {\n      learning_objectives: [\n        \"Understand wildfire behavior and climate change interactions\",\n        \"Analyze emergency management and cross-border cooperation\",\n        \"Examine forest management and ecosystem adaptation strategies\"\n      ],\n      related_topics: [\"Climate Adaptation\", \"Forest Management\", \"Emergency Coordination\", \"Ecosystem Services\"]\n    },\n    trend_analysis: \"Exponential increase in wildfire intensity with 250% more extreme fire weather days annually\",\n    related_events: [3, 5, 15],\n    created_at: new Date()\n  },\n  {\n    id: 10,\n    title: \"India Launches Digital Education Initiative for Rural Schools\",\n    source: \"Times of India\",\n    published_date: \"2025-07-29\",\n    content: \"India unveiled the world's largest digital education platform, providing free access to quality education for 300 million students in rural areas. The $12 billion initiative includes satellite connectivity, AI-powered personalized learning, and vocational training programs designed to bridge the digital divide and enhance educational equity.\",\n    location: { country: \"India\", city: \"New Delhi\", latitude: 28.6139, longitude: 77.2090 },\n    category: \"innovation\",\n    entities: { \n      countries: [\"India\", \"Finland\", \"Singapore\"], \n      organizations: [\"Ministry of Education\", \"ISRO\", \"UNESCO\"],\n      people: [\"Narendra Modi\", \"Dharmendra Pradhan\"]\n    },\n    ai_summary: \"India's digital education revolution demonstrates scalable technology solutions for educational equity. The initiative creates global model for bridging digital divides while preserving local cultural contexts.\",\n    tags: [\"Digital Education\", \"Innovation\", \"Social Development\", \"Technology Access\"],\n    sentiment: \"Positive\",\n    sentiment_score: 0.92,\n    geopolitical_impact: 7.6,\n    conflict_escalation_probability: 0.01,\n    economic_impact: 8.8,\n    educational_context: {\n      learning_objectives: [\n        \"Examine digital transformation in education and development\",\n        \"Analyze technology access and equity in developing nations\",\n        \"Evaluate scalable solutions for educational infrastructure\"\n      ],\n      related_topics: [\"Digital Divide\", \"Educational Equity\", \"Technology for Development\", \"Human Capital\"]\n    },\n    trend_analysis: \"Accelerating digital education adoption with 180% increase in remote learning infrastructure globally\",\n    related_events: [4, 6, 12],\n    created_at: new Date()\n  },\n  {\n    id: 11,\n    title: \"US and Saudi Arabia Discuss Regional Stability Amid Oil Talks\",\n    source: \"Washington Post\",\n    published_date: \"2025-08-03\",\n    content: \"High-level US-Saudi diplomatic talks addressed regional security architecture and energy cooperation, with discussions on Iran containment, Yemen conflict resolution, and oil production stabilization. The strategic dialogue aims to strengthen partnership while managing human rights concerns and diversification challenges.\",\n    location: { country: \"Saudi Arabia\", city: \"Riyadh\", latitude: 24.7136, longitude: 46.6753 },\n    category: \"diplomacy\",\n    entities: { \n      countries: [\"United States\", \"Saudi Arabia\", \"Iran\", \"Yemen\"], \n      organizations: [\"OPEC\", \"State Department\", \"ARAMCO\"],\n      people: [\"Antony Blinken\", \"Mohammed bin Salman\", \"Jake Sullivan\"]\n    },\n    ai_summary: \"US-Saudi strategic dialogue balances energy security with regional stability concerns. The partnership evolution reflects changing Middle East dynamics and energy transition pressures on traditional alliances.\",\n    tags: [\"Middle East\", \"Energy Security\", \"Strategic Partnership\", \"Regional Stability\"],\n    sentiment: \"Neutral\",\n    sentiment_score: 0.52,\n    geopolitical_impact: 8.3,\n    conflict_escalation_probability: 0.35,\n    economic_impact: 8.9,\n    educational_context: {\n      learning_objectives: [\n        \"Analyze US-Middle East strategic relationships and energy diplomacy\",\n        \"Examine regional security complexes and balance of power\",\n        \"Understand energy transition impacts on geopolitical alliances\"\n      ],\n      related_topics: [\"Energy Security\", \"Regional Balance\", \"Strategic Partnerships\", \"Middle East Politics\"]\n    },\n    trend_analysis: \"Evolving US-Middle East engagement with 30% shift toward multilateral cooperation frameworks\",\n    related_events: [1, 14, 19],\n    created_at: new Date()\n  },\n  {\n    id: 12,\n    title: \"Russia Unveils New AI-Powered Defense System\",\n    source: \"TASS\",\n    published_date: \"2025-08-02\",\n    content: \"Russia demonstrated its advanced S-500 Prometheus air defense system integrated with artificial intelligence capabilities, claiming 99.7% interception accuracy against hypersonic threats. The system represents significant advancement in missile defense technology and strategic deterrence capabilities, raising concerns about arms race acceleration.\",\n    location: { country: \"Russia\", city: \"Moscow\", latitude: 55.7558, longitude: 37.6173 },\n    category: \"innovation\",\n    entities: { \n      countries: [\"Russia\", \"China\", \"United States\", \"NATO\"], \n      organizations: [\"Russian Defense Ministry\", \"Rostec\", \"Pentagon\"],\n      people: [\"Vladimir Putin\", \"Sergey Shoigu\"]\n    },\n    ai_summary: \"Russian AI defense system advancement signals military technology competition escalation. The development challenges existing strategic stability frameworks and accelerates global military AI adoption.\",\n    tags: [\"Military Technology\", \"Artificial Intelligence\", \"Defense\", \"Strategic Competition\"],\n    sentiment: \"Neutral\",\n    sentiment_score: 0.48,\n    geopolitical_impact: 8.8,\n    conflict_escalation_probability: 0.42,\n    economic_impact: 7.9,\n    educational_context: {\n      learning_objectives: [\n        \"Understand military applications of artificial intelligence\",\n        \"Analyze strategic stability and arms control challenges\",\n        \"Examine technology competition in great power rivalry\"\n      ],\n      related_topics: [\"Military Innovation\", \"Strategic Stability\", \"AI Governance\", \"Arms Control\"]\n    },\n    trend_analysis: \"Accelerating military AI development with 400% increase in defense AI investments globally\",\n    related_events: [1, 6, 19],\n    created_at: new Date()\n  },\n  {\n    id: 13,\n    title: \"Argentina Faces Economic Crisis as Inflation Surges\",\n    source: \"Bloomberg\",\n    published_date: \"2025-08-01\",\n    content: \"Argentina's inflation reached 287% annually, prompting mass protests and economic emergency measures. The crisis threatens regional stability as currency devaluation accelerates, foreign reserves dwindle, and social unrest intensifies, highlighting the challenges of economic stabilization in emerging markets.\",\n    location: { country: \"Argentina\", city: \"Buenos Aires\", latitude: -34.6037, longitude: -58.3816 },\n    category: \"economy\",\n    entities: { \n      countries: [\"Argentina\", \"Brazil\", \"IMF Members\"], \n      organizations: [\"Central Bank of Argentina\", \"IMF\", \"World Bank\"],\n      people: [\"Javier Milei\", \"Kristalina Georgieva\"]\n    },\n    ai_summary: \"Argentina's hyperinflation crisis demonstrates emerging market vulnerability to global economic pressures. The situation requires comprehensive structural reforms and international financial cooperation for stabilization.\",\n    tags: [\"Economic Crisis\", \"Latin America\", \"Inflation\", \"Financial Stability\"],\n    sentiment: \"Negative\",\n    sentiment_score: 0.92,\n    geopolitical_impact: 7.1,\n    conflict_escalation_probability: 0.25,\n    economic_impact: 9.3,\n    educational_context: {\n      learning_objectives: [\n        \"Analyze hyperinflation causes and economic stabilization strategies\",\n        \"Examine international financial institution roles in crisis management\",\n        \"Understand social and political impacts of economic crises\"\n      ],\n      related_topics: [\"Monetary Policy\", \"Economic Stabilization\", \"Social Unrest\", \"International Finance\"]\n    },\n    trend_analysis: \"Growing economic instability in emerging markets with 60% increase in sovereign debt distress\",\n    related_events: [7, 14, 17],\n    created_at: new Date()\n  },\n  {\n    id: 14,\n    title: \"France Hosts Tech4Peace Conference in Paris\",\n    source: \"Le Monde\",\n    published_date: \"2025-07-27\",\n    content: \"Global technology leaders, policymakers, and peace advocates gathered in Paris for the inaugural Tech4Peace Conference, establishing frameworks for responsible AI development and digital peacekeeping. The summit produced the Paris Declaration on Technology Ethics and created a $5 billion fund for conflict prevention technologies.\",\n    location: { country: \"France\", city: \"Paris\", latitude: 48.8566, longitude: 2.3522 },\n    category: \"innovation\",\n    entities: { \n      countries: [\"France\", \"Germany\", \"Kenya\", \"Estonia\"], \n      organizations: [\"UNESCO\", \"European Commission\", \"Tech4Good\"],\n      people: [\"Emmanuel Macron\", \"Audrey Azoulay\", \"Margrethe Vestager\"]\n    },\n    ai_summary: \"Tech4Peace Conference establishes global framework for technology governance and conflict prevention. The initiative demonstrates European leadership in digital diplomacy and responsible innovation approaches.\",\n    tags: [\"Technology Governance\", \"Peace\", \"Innovation\", \"Digital Diplomacy\"],\n    sentiment: \"Positive\",\n    sentiment_score: 0.89,\n    geopolitical_impact: 7.9,\n    conflict_escalation_probability: 0.02,\n    economic_impact: 8.2,\n    educational_context: {\n      learning_objectives: [\n        \"Examine technology ethics and governance frameworks\",\n        \"Analyze digital tools for conflict prevention and peacekeeping\",\n        \"Understand multistakeholder approaches to technology policy\"\n      ],\n      related_topics: [\"Technology Ethics\", \"Digital Governance\", \"Peace Technology\", \"Multilateral Cooperation\"]\n    },\n    trend_analysis: \"Increasing focus on technology governance with 120% growth in digital diplomacy initiatives\",\n    related_events: [8, 11, 12],\n    created_at: new Date()\n  },\n  {\n    id: 15,\n    title: \"Sudan Ceasefire Agreement Reached Amid UN Mediation\",\n    source: \"UN News\",\n    published_date: \"2025-08-03\",\n    content: \"Warring factions in Sudan signed a comprehensive ceasefire agreement following intensive UN-mediated negotiations in Jeddah. The deal includes humanitarian corridor establishment, transitional government formation, and international monitoring mechanisms, offering hope for ending 18 months of devastating conflict.\",\n    location: { country: \"Sudan\", city: \"Khartoum\", latitude: 15.5007, longitude: 32.5599 },\n    category: \"conflict\",\n    entities: { \n      countries: [\"Sudan\", \"Saudi Arabia\", \"South Sudan\", \"Ethiopia\"], \n      organizations: [\"United Nations\", \"African Union\", \"IGAD\"],\n      people: [\"Volker Perthes\", \"Moussa Faki\", \"Abdel Fattah al-Burhan\"]\n    },\n    ai_summary: \"Sudan ceasefire breakthrough demonstrates effective multilateral mediation despite complex conflict dynamics. The agreement creates framework for political transition and humanitarian access restoration.\",\n    tags: [\"Conflict Resolution\", \"Africa\", \"Peace Talks\", \"Humanitarian Access\"],\n    sentiment: \"Positive\",\n    sentiment_score: 0.86,\n    geopolitical_impact: 8.4,\n    conflict_escalation_probability: 0.22,\n    economic_impact: 7.8,\n    educational_context: {\n      learning_objectives: [\n        \"Analyze conflict mediation and peace process design\",\n        \"Examine regional organization roles in conflict resolution\",\n        \"Understand transitional governance and state-building challenges\"\n      ],\n      related_topics: [\"Peace Processes\", \"Conflict Mediation\", \"Transitional Justice\", \"Regional Security\"]\n    },\n    trend_analysis: \"Mixed success in African peace processes with 40% improvement in mediation effectiveness\",\n    related_events: [2, 5, 9],\n    created_at: new Date()\n  },\n  {\n    id: 16,\n    title: \"Volcanic Eruption Triggers Mass Evacuation in Iceland\",\n    source: \"Iceland Monitor\",\n    published_date: \"2025-07-26\",\n    content: \"The Reykjanes Peninsula volcanic system erupted with unprecedented intensity, forcing evacuation of 120,000 residents and disrupting European air traffic. The eruption's impact on global climate patterns and aviation safety demonstrates Iceland's unique geological significance and international vulnerability to natural disasters.\",\n    location: { country: \"Iceland\", city: \"Reykjavik\", latitude: 64.1466, longitude: -21.9426 },\n    category: \"disaster\",\n    entities: { \n      countries: [\"Iceland\", \"Norway\", \"Denmark\", \"UK\"], \n      organizations: [\"Icelandic Met Office\", \"EUROCONTROL\", \"EU Civil Protection\"],\n      people: [\"Katrín Jakobsdóttir\", \"Þórdís Kolbrún Gylfadóttir\"]\n    },\n    ai_summary: \"Iceland volcanic eruption highlights interconnected global vulnerabilities to natural disasters. The event demonstrates importance of international coordination in managing transnational disaster impacts.\",\n    tags: [\"Volcanic Eruption\", \"Aviation Safety\", \"European Crisis\", \"Natural Disaster\"],\n    sentiment: \"Negative\",\n    sentiment_score: 0.87,\n    geopolitical_impact: 6.9,\n    conflict_escalation_probability: 0.03,\n    economic_impact: 8.1,\n    educational_context: {\n      learning_objectives: [\n        \"Understand volcanic systems and global climate impacts\",\n        \"Analyze international disaster response coordination\",\n        \"Examine transportation network vulnerabilities and resilience\"\n      ],\n      related_topics: [\"Geology\", \"Aviation Safety\", \"Crisis Management\", \"Climate Impact\"]\n    },\n    trend_analysis: \"Increasing geological activity with 45% rise in significant volcanic events globally\",\n    related_events: [3, 7, 9],\n    created_at: new Date()\n  },\n  {\n    id: 17,\n    title: \"Brazil Announces Amazon Restoration Megaproject\",\n    source: \"Reuters Brazil\",\n    published_date: \"2025-07-24\",\n    content: \"Brazil launched a $25 billion Amazon rainforest restoration initiative, aiming to reforest 12 million hectares by 2030. The project combines indigenous land rights recognition, sustainable development programs, and international climate financing, representing the world's largest ecosystem restoration effort.\",\n    location: { country: \"Brazil\", city: \"Manaus\", latitude: -3.1190, longitude: -60.0217 },\n    category: \"climate\",\n    entities: { \n      countries: [\"Brazil\", \"Norway\", \"Germany\", \"France\"], \n      organizations: [\"FUNAI\", \"Amazon Fund\", \"World Bank\"],\n      people: [\"Luiz Inácio Lula da Silva\", \"Marina Silva\"]\n    },\n    ai_summary: \"Brazil's Amazon restoration megaproject represents unprecedented commitment to ecosystem recovery and climate action. The initiative demonstrates integration of indigenous rights, conservation, and sustainable development approaches.\",\n    tags: [\"Amazon\", \"Restoration\", \"Climate Action\", \"Indigenous Rights\"],\n    sentiment: \"Positive\",\n    sentiment_score: 0.94,\n    geopolitical_impact: 8.6,\n    conflict_escalation_probability: 0.08,\n    economic_impact: 8.7,\n    educational_context: {\n      learning_objectives: [\n        \"Examine ecosystem restoration science and methodologies\",\n        \"Analyze indigenous land rights and conservation partnerships\",\n        \"Understand international climate financing mechanisms\"\n      ],\n      related_topics: [\"Ecosystem Restoration\", \"Indigenous Rights\", \"Climate Finance\", \"Sustainable Development\"]\n    },\n    trend_analysis: \"Growing momentum in nature-based climate solutions with 90% increase in restoration commitments\",\n    related_events: [2, 4, 13],\n    created_at: new Date()\n  },\n  {\n    id: 18,\n    title: \"Pacific Island Nations Form Climate Alliance\",\n    source: \"Pacific Islands Forum\",\n    published_date: \"2025-07-23\",\n    content: \"Fourteen Pacific Island nations established the Pacific Climate Resilience Alliance, pooling resources for adaptation projects and advocating for climate justice in international forums. The alliance represents 1.2 million people facing existential threats from sea-level rise and extreme weather events.\",\n    location: { country: \"Fiji\", city: \"Suva\", latitude: -18.1248, longitude: 178.4501 },\n    category: \"climate\",\n    entities: { \n      countries: [\"Fiji\", \"Tuvalu\", \"Marshall Islands\", \"Vanuatu\"], \n      organizations: [\"Pacific Islands Forum\", \"Green Climate Fund\", \"UNEP\"],\n      people: [\"Frank Bainimarama\", \"Kausea Natano\"]\n    },\n    ai_summary: \"Pacific Island climate alliance demonstrates small state collective action on existential challenges. The initiative amplifies vulnerable nation voices in global climate governance while building regional resilience capacity.\",\n    tags: [\"Climate Alliance\", \"Small Island States\", \"Climate Justice\", \"Pacific\"],\n    sentiment: \"Positive\",\n    sentiment_score: 0.83,\n    geopolitical_impact: 7.2,\n    conflict_escalation_probability: 0.12,\n    economic_impact: 6.8,\n    educational_context: {\n      learning_objectives: [\n        \"Understand small island state vulnerability to climate change\",\n        \"Analyze collective action strategies for global governance\",\n        \"Examine climate justice and loss and damage mechanisms\"\n      ],\n      related_topics: [\"Climate Vulnerability\", \"Small State Diplomacy\", \"Climate Justice\", \"Regional Cooperation\"]\n    },\n    trend_analysis: \"Strengthening small state coalitions with 70% increase in climate alliance formation\",\n    related_events: [2, 5, 17],\n    created_at: new Date()\n  },\n  {\n    id: 19,\n    title: \"China-Russia Military Exercise in Arctic Region\",\n    source: \"South China Morning Post\",\n    published_date: \"2025-07-22\",\n    content: \"China and Russia conducted joint military exercises in the Arctic, involving nuclear submarines, icebreakers, and advanced missile systems. The unprecedented cooperation in polar regions demonstrates strategic partnership deepening while challenging Western Arctic presence and raising concerns about militarization of the region.\",\n    location: { country: \"Russia\", city: \"Murmansk\", latitude: 68.9585, longitude: 33.0827 },\n    category: \"conflict\",\n    entities: { \n      countries: [\"China\", \"Russia\", \"United States\", \"Norway\"], \n      organizations: [\"PLA Navy\", \"Russian Northern Fleet\", \"Arctic Council\"],\n      people: [\"Xi Jinping\", \"Vladimir Putin\", \"Sergey Shoigu\"]\n    },\n    ai_summary: \"China-Russia Arctic military cooperation signals strategic partnership evolution and polar region militarization. The exercises challenge existing Arctic governance frameworks and Western strategic assumptions.\",\n    tags: [\"Arctic Security\", \"Military Cooperation\", \"Strategic Partnership\", \"Polar Politics\"],\n    sentiment: \"Negative\",\n    sentiment_score: 0.69,\n    geopolitical_impact: 9.1,\n    conflict_escalation_probability: 0.55,\n    economic_impact: 7.6,\n    educational_context: {\n      learning_objectives: [\n        \"Analyze Arctic geopolitics and resource competition\",\n        \"Examine strategic partnerships and alliance dynamics\",\n        \"Understand polar region governance and militarization trends\"\n      ],\n      related_topics: [\"Arctic Politics\", \"Strategic Alliances\", \"Resource Competition\", \"Polar Governance\"]\n    },\n    trend_analysis: \"Intensifying Arctic competition with 150% increase in military activities over five years\",\n    related_events: [1, 6, 11],\n    created_at: new Date()\n  },\n  {\n    id: 20,\n    title: \"International Space Station Deorbits After 25 Years\",\n    source: \"Space News\",\n    published_date: \"2025-07-21\",\n    content: \"The International Space Station completed its final mission after 25 years of continuous human presence in space, successfully deorbiting into the Pacific Ocean. The station's legacy includes groundbreaking research, international cooperation during geopolitical tensions, and technology advancement for future space exploration.\",\n    location: { country: \"International Waters\", city: \"Pacific Ocean\", latitude: -45.0000, longitude: -165.0000 },\n    category: \"innovation\",\n    entities: { \n      countries: [\"United States\", \"Russia\", \"Japan\", \"Canada\", \"European Union\"], \n      organizations: [\"NASA\", \"Roscosmos\", \"ESA\", \"JAXA\", \"CSA\"],\n      people: [\"Bill Nelson\", \"Yuri Borisov\", \"Josef Aschbacher\"]\n    },\n    ai_summary: \"ISS deorbiting marks end of unprecedented international cooperation era in space. The station's legacy demonstrates peaceful collaboration potential while transitioning toward commercial space station development.\",\n    tags: [\"Space Station\", \"International Cooperation\", \"Space Legacy\", \"Scientific Achievement\"],\n    sentiment: \"Neutral\",\n    sentiment_score: 0.76,\n    geopolitical_impact: 8.2,\n    conflict_escalation_probability: 0.05,\n    economic_impact: 8.9,\n    educational_context: {\n      learning_objectives: [\n        \"Examine international cooperation in space exploration\",\n        \"Analyze scientific achievements and technology transfer\",\n        \"Understand transition to commercial space infrastructure\"\n      ],\n      related_topics: [\"Space Cooperation\", \"Scientific Discovery\", \"Technology Transfer\", \"Commercial Space\"]\n    },\n    trend_analysis: \"Transitioning space cooperation with 200% growth in commercial space station development\",\n    related_events: [6, 12, 14],\n    created_at: new Date()\n  }\n];","size_bytes":37626},"client/src/data/news-data.ts":{"content":"import { NewsEvent } from \"@shared/schema\";\n\nexport const sampleNewsData: NewsEvent[] = [\n  {\n    id: 1,\n    title: \"China Conducts Large-Scale Military Drills Near Taiwan\",\n    source: \"Reuters\",\n    published_date: \"2025-08-03\",\n    content: \"China conducted large-scale military drills around Taiwan's airspace and waters in response to recent diplomatic visits. The exercises involved over 100 aircraft and multiple naval vessels, marking the largest show of force in the Taiwan Strait this year. Regional tensions have escalated following high-level diplomatic meetings between Taiwan and its international partners.\",\n    location: { country: \"Taiwan\", city: \"Taipei\", latitude: 25.0330, longitude: 121.5654 },\n    category: \"conflict\",\n    entities: { \n      countries: [\"China\", \"Taiwan\", \"United States\"], \n      people: [\"Xi Jinping\", \"William Lai\"],\n      organizations: [\"PLA\", \"Taiwan Defense Ministry\"]\n    },\n    ai_summary: \"China conducted military drills near Taiwan following diplomatic tensions. U.S. calls for de-escalation while regional allies monitor situation closely.\",\n    tags: [\"Military\", \"Asia-Pacific\", \"Geopolitics\"],\n    sentiment: \"Negative\",\n    sentiment_score: 0.92,\n    geopolitical_impact: 9.2,\n    conflict_escalation_probability: 0.75,\n    economic_impact: 8.1,\n    educational_context: {\n      learning_objectives: [\n        \"Understand cross-strait relations\",\n        \"Analyze regional security dynamics\",\n        \"Evaluate international responses to conflicts\"\n      ],\n      related_topics: [\"One China Policy\", \"Regional Security\", \"International Law\"]\n    },\n    trend_analysis: \"Escalating pattern over past 6 months\",\n    related_events: [2, 11],\n    created_at: new Date()\n  },\n  {\n    id: 2,\n    title: \"UN Climate Summit Reaches Historic Agreement in Geneva\",\n    source: \"BBC\",\n    published_date: \"2025-08-01\",\n    content: \"World leaders at the UN Climate Summit in Geneva reached a groundbreaking agreement on carbon reduction targets...\",\n    location: { country: \"Switzerland\", city: \"Geneva\", latitude: 46.2044, longitude: 6.1432 },\n    category: \"diplomacy\",\n    entities: { \n      countries: [\"Switzerland\", \"France\", \"India\", \"Brazil\", \"Germany\"], \n      organizations: [\"United Nations\", \"IPCC\"],\n      people: [\"António Guterres\"]\n    },\n    ai_summary: \"Historic climate agreement reached with 195 countries committing to accelerated carbon reduction. Binding targets set for 2030.\",\n    tags: [\"Climate\", \"Diplomacy\", \"Environment\"],\n    sentiment: \"Positive\",\n    sentiment_score: 0.87,\n    geopolitical_impact: 8.9,\n    conflict_escalation_probability: 0.1,\n    economic_impact: 7.8,\n    educational_context: {\n      learning_objectives: [\n        \"Understand multilateral diplomacy\",\n        \"Analyze climate policy frameworks\",\n        \"Evaluate global cooperation mechanisms\"\n      ],\n      related_topics: [\"Paris Agreement\", \"Global Governance\", \"Environmental Policy\"]\n    },\n    trend_analysis: \"Positive momentum building since COP28\",\n    related_events: [8, 15],\n    created_at: new Date()\n  },\n  {\n    id: 3,\n    title: \"Devastating 7.4 Earthquake Strikes Northern Japan\",\n    source: \"NHK World\",\n    published_date: \"2025-01-01\",\n    content: \"A powerful 7.4 magnitude earthquake struck northern Japan, causing widespread damage and triggering tsunami warnings...\",\n    location: { country: \"Japan\", city: \"Sendai\", latitude: 38.2682, longitude: 140.8694 },\n    category: \"disaster\",\n    entities: { \n      countries: [\"Japan\"], \n      organizations: [\"Japan Meteorological Agency\", \"Japanese Red Cross\"],\n      people: [\"Fumio Kishida\"]\n    },\n    ai_summary: \"Major earthquake hits northern Japan with tsunami warnings issued. International aid mobilizing as damage assessment continues.\",\n    tags: [\"Natural Disaster\", \"Emergency Response\", \"Asia\"],\n    sentiment: \"Negative\",\n    sentiment_score: 0.94,\n    geopolitical_impact: 6.8,\n    conflict_escalation_probability: 0.05,\n    economic_impact: 8.9,\n    educational_context: {\n      learning_objectives: [\n        \"Understand natural disaster preparedness\",\n        \"Analyze emergency response systems\",\n        \"Evaluate international humanitarian aid\"\n      ],\n      related_topics: [\"Pacific Ring of Fire\", \"Disaster Management\", \"International Aid\"]\n    },\n    trend_analysis: \"Increased seismic activity in region\",\n    related_events: [9, 16],\n    created_at: new Date()\n  },\n  {\n    id: 4,\n    title: \"Germany Launches Revolutionary Hydrogen Rail Network\",\n    source: \"Deutsche Welle\",\n    published_date: \"2024-12-30\",\n    content: \"Germany inaugurated the world's first nationwide hydrogen-powered passenger rail network, marking a major step in green transportation...\",\n    location: { country: \"Germany\", city: \"Berlin\", latitude: 52.5200, longitude: 13.4050 },\n    category: \"innovation\",\n    entities: { \n      countries: [\"Germany\"], \n      organizations: [\"Deutsche Bahn\", \"Siemens\"],\n      people: [\"Olaf Scholz\"]\n    },\n    ai_summary: \"Germany launches world's first hydrogen rail network, setting global precedent for sustainable transportation innovation.\",\n    tags: [\"Green Technology\", \"Transportation\", \"Innovation\"],\n    sentiment: \"Positive\",\n    sentiment_score: 0.91,\n    geopolitical_impact: 7.2,\n    conflict_escalation_probability: 0.02,\n    economic_impact: 8.4,\n    educational_context: {\n      learning_objectives: [\n        \"Understand renewable energy applications\",\n        \"Analyze sustainable development goals\",\n        \"Evaluate technological innovation impact\"\n      ],\n      related_topics: [\"Energy Transition\", \"Green Technology\", \"Sustainable Development\"]\n    },\n    trend_analysis: \"Growing investment in hydrogen infrastructure\",\n    related_events: [12, 18],\n    created_at: new Date()\n  },\n  {\n    id: 5,\n    title: \"Catastrophic Flooding Displaces Millions in Bangladesh\",\n    source: \"Al Jazeera\",\n    published_date: \"2024-12-29\",\n    content: \"Record monsoon rains have caused devastating floods across Bangladesh, displacing over 4 million people...\",\n    location: { country: \"Bangladesh\", city: \"Dhaka\", latitude: 23.8103, longitude: 90.4125 },\n    category: \"disaster\",\n    entities: { \n      countries: [\"Bangladesh\", \"India\"], \n      organizations: [\"UNICEF\", \"Red Crescent\"],\n      people: [\"Sheikh Hasina\"]\n    },\n    ai_summary: \"Severe flooding in Bangladesh displaces millions. Climate change blamed as international humanitarian response mobilizes.\",\n    tags: [\"Climate Change\", \"Humanitarian Crisis\", \"South Asia\"],\n    sentiment: \"Negative\",\n    sentiment_score: 0.89,\n    geopolitical_impact: 7.1,\n    conflict_escalation_probability: 0.25,\n    economic_impact: 8.7,\n    educational_context: {\n      learning_objectives: [\n        \"Understand climate vulnerability\",\n        \"Analyze humanitarian response coordination\",\n        \"Evaluate disaster resilience strategies\"\n      ],\n      related_topics: [\"Climate Adaptation\", \"Disaster Risk Reduction\", \"Migration\"]\n    },\n    trend_analysis: \"Increasing frequency of extreme weather events\",\n    related_events: [3, 15],\n    created_at: new Date()\n  },\n  {\n    id: 6,\n    title: \"NASA Artemis Mission Successfully Establishes Lunar Base Alpha\",\n    source: \"NASA\",\n    published_date: \"2024-12-28\",\n    content: \"NASA's Artemis program reached a historic milestone with the successful establishment of a permanent lunar research station...\",\n    location: { country: \"United States\", city: \"Houston\", latitude: 29.7604, longitude: -95.3698 },\n    category: \"innovation\",\n    entities: { \n      countries: [\"United States\", \"Canada\", \"Japan\"], \n      organizations: [\"NASA\", \"SpaceX\", \"ESA\"],\n      people: [\"Bill Nelson\"]\n    },\n    ai_summary: \"NASA establishes first permanent lunar base, marking new era in space exploration and international cooperation.\",\n    tags: [\"Space Exploration\", \"Technology\", \"International Cooperation\"],\n    sentiment: \"Positive\",\n    sentiment_score: 0.95,\n    geopolitical_impact: 8.7,\n    conflict_escalation_probability: 0.01,\n    economic_impact: 9.1,\n    educational_context: {\n      learning_objectives: [\n        \"Understand space exploration milestones\",\n        \"Analyze international space cooperation\",\n        \"Evaluate technological advancement impacts\"\n      ],\n      related_topics: [\"Space Race\", \"International Treaties\", \"Scientific Collaboration\"]\n    },\n    trend_analysis: \"Accelerating space exploration activities\",\n    related_events: [19, 20],\n    created_at: new Date()\n  },\n  {\n    id: 7,\n    title: \"Major Measles Outbreak Spreads Across Central Africa\",\n    source: \"WHO\",\n    published_date: \"2024-12-27\",\n    content: \"The World Health Organization declared a public health emergency as measles outbreaks spread across five Central African nations...\",\n    location: { country: \"Democratic Republic of Congo\", city: \"Kinshasa\", latitude: -4.4419, longitude: 15.2663 },\n    category: \"health\",\n    entities: { \n      countries: [\"DR Congo\", \"Chad\", \"Central African Republic\"], \n      organizations: [\"WHO\", \"Médecins Sans Frontières\"],\n      people: [\"Tedros Adhanom\"]\n    },\n    ai_summary: \"WHO declares health emergency over measles outbreak in Central Africa. Vaccination campaigns urgently needed across region.\",\n    tags: [\"Public Health\", \"Disease Outbreak\", \"Africa\"],\n    sentiment: \"Negative\",\n    sentiment_score: 0.86,\n    geopolitical_impact: 6.9,\n    conflict_escalation_probability: 0.15,\n    economic_impact: 7.2,\n    educational_context: {\n      learning_objectives: [\n        \"Understand global health security\",\n        \"Analyze disease prevention strategies\",\n        \"Evaluate international health cooperation\"\n      ],\n      related_topics: [\"Global Health\", \"Vaccine Equity\", \"Healthcare Systems\"]\n    },\n    trend_analysis: \"Declining vaccination rates in conflict zones\",\n    related_events: [13, 17],\n    created_at: new Date()\n  },\n  {\n    id: 8,\n    title: \"UK-EU Sign Comprehensive Post-Brexit Trade Enhancement Deal\",\n    source: \"Financial Times\",\n    published_date: \"2024-12-26\",\n    content: \"The United Kingdom and European Union signed a landmark trade agreement enhancing economic cooperation post-Brexit...\",\n    location: { country: \"United Kingdom\", city: \"London\", latitude: 51.5074, longitude: -0.1278 },\n    category: \"diplomacy\",\n    entities: { \n      countries: [\"United Kingdom\", \"European Union\", \"France\", \"Germany\"], \n      organizations: [\"European Commission\", \"UK Parliament\"],\n      people: [\"Keir Starmer\", \"Ursula von der Leyen\"]\n    },\n    ai_summary: \"Historic UK-EU trade deal strengthens post-Brexit relations, boosting economic cooperation and regulatory alignment.\",\n    tags: [\"Trade\", \"Brexit\", \"European Relations\"],\n    sentiment: \"Positive\",\n    sentiment_score: 0.84,\n    geopolitical_impact: 8.3,\n    conflict_escalation_probability: 0.05,\n    economic_impact: 9.2,\n    educational_context: {\n      learning_objectives: [\n        \"Understand Brexit consequences\",\n        \"Analyze trade agreement structures\",\n        \"Evaluate European integration processes\"\n      ],\n      related_topics: [\"European Integration\", \"Trade Policy\", \"Brexit Impact\"]\n    },\n    trend_analysis: \"Improving UK-EU relations trend\",\n    related_events: [2, 14],\n    created_at: new Date()\n  },\n  {\n    id: 9,\n    title: \"Massive Wildfires Ravage British Columbia\",\n    source: \"CBC News\",\n    published_date: \"2024-12-25\",\n    content: \"Unprecedented wildfires continue to burn across British Columbia, forcing mass evacuations and creating air quality emergencies...\",\n    location: { country: \"Canada\", city: \"Vancouver\", latitude: 49.2827, longitude: -123.1207 },\n    category: \"disaster\",\n    entities: { \n      countries: [\"Canada\", \"United States\"], \n      organizations: [\"BC Wildfire Service\", \"Canadian Forces\"],\n      people: [\"Justin Trudeau\"]\n    },\n    ai_summary: \"Record wildfires in BC force thousands to evacuate. Climate change intensifies fire season across western North America.\",\n    tags: [\"Wildfire\", \"Climate Change\", \"Emergency Response\"],\n    sentiment: \"Negative\",\n    sentiment_score: 0.88,\n    geopolitical_impact: 6.4,\n    conflict_escalation_probability: 0.08,\n    economic_impact: 8.3,\n    educational_context: {\n      learning_objectives: [\n        \"Understand wildfire management\",\n        \"Analyze climate change impacts\",\n        \"Evaluate emergency response coordination\"\n      ],\n      related_topics: [\"Forest Management\", \"Climate Adaptation\", \"Emergency Planning\"]\n    },\n    trend_analysis: \"Intensifying wildfire seasons globally\",\n    related_events: [3, 5, 15],\n    created_at: new Date()\n  },\n  {\n    id: 10,\n    title: \"India Launches National Digital Education Revolution\",\n    source: \"Times of India\",\n    published_date: \"2024-12-24\",\n    content: \"India unveiled the world's largest digital education platform, providing free access to quality education for 300 million students...\",\n    location: { country: \"India\", city: \"New Delhi\", latitude: 28.6139, longitude: 77.2090 },\n    category: \"innovation\",\n    entities: { \n      countries: [\"India\"], \n      organizations: [\"Ministry of Education\", \"ISRO\"],\n      people: [\"Narendra Modi\"]\n    },\n    ai_summary: \"India launches massive digital education platform reaching 300 million students, revolutionizing educational access.\",\n    tags: [\"Digital Education\", \"Innovation\", \"Social Development\"],\n    sentiment: \"Positive\",\n    sentiment_score: 0.93,\n    geopolitical_impact: 7.8,\n    conflict_escalation_probability: 0.02,\n    economic_impact: 8.6,\n    educational_context: {\n      learning_objectives: [\n        \"Understand digital transformation in education\",\n        \"Analyze scalable technology solutions\",\n        \"Evaluate social impact of innovation\"\n      ],\n      related_topics: [\"Digital Divide\", \"Educational Equity\", \"Technology Access\"]\n    },\n    trend_analysis: \"Accelerating digital education adoption globally\",\n    related_events: [4, 6],\n    created_at: new Date()\n  },\n  {\n    id: 11,\n    title: \"US-Saudi Arabia Strategic Partnership Summit in Riyadh\",\n    source: \"Washington Post\",\n    published_date: \"2024-12-23\",\n    content: \"High-level diplomatic talks between the United States and Saudi Arabia focused on regional stability and energy cooperation...\",\n    location: { country: \"Saudi Arabia\", city: \"Riyadh\", latitude: 24.7136, longitude: 46.6753 },\n    category: \"diplomacy\",\n    entities: { \n      countries: [\"United States\", \"Saudi Arabia\", \"Iran\"], \n      organizations: [\"OPEC\", \"State Department\"],\n      people: [\"Antony Blinken\", \"Mohammed bin Salman\"]\n    },\n    ai_summary: \"US-Saudi summit addresses regional security concerns and energy partnership, seeking Middle East stability.\",\n    tags: [\"Middle East\", \"Energy Security\", \"Strategic Partnership\"],\n    sentiment: \"Neutral\",\n    sentiment_score: 0.52,\n    geopolitical_impact: 8.1,\n    conflict_escalation_probability: 0.35,\n    economic_impact: 8.8,\n    educational_context: {\n      learning_objectives: [\n        \"Understand Middle East geopolitics\",\n        \"Analyze energy diplomacy\",\n        \"Evaluate strategic partnerships\"\n      ],\n      related_topics: [\"Energy Security\", \"Regional Stability\", \"Diplomatic Relations\"]\n    },\n    trend_analysis: \"Evolving US-Middle East relationships\",\n    related_events: [1, 14],\n    created_at: new Date()\n  },\n  {\n    id: 12,\n    title: \"Russia Unveils Advanced AI-Powered Defense System\",\n    source: \"RT\",\n    published_date: \"2024-12-22\",\n    content: \"Russia demonstrated its new artificial intelligence-driven missile defense system, claiming significant technological advancement...\",\n    location: { country: \"Russia\", city: \"Moscow\", latitude: 55.7558, longitude: 37.6173 },\n    category: \"innovation\",\n    entities: { \n      countries: [\"Russia\", \"China\", \"United States\"], \n      organizations: [\"Russian Defense Ministry\", \"Roscosmos\"],\n      people: [\"Vladimir Putin\"]\n    },\n    ai_summary: \"Russia showcases AI defense technology, raising questions about global military balance and arms race acceleration.\",\n    tags: [\"Military Technology\", \"Artificial Intelligence\", \"Defense\"],\n    sentiment: \"Neutral\",\n    sentiment_score: 0.48,\n    geopolitical_impact: 8.9,\n    conflict_escalation_probability: 0.45,\n    economic_impact: 7.9,\n    educational_context: {\n      learning_objectives: [\n        \"Understand military technology evolution\",\n        \"Analyze arms race dynamics\",\n        \"Evaluate AI in warfare implications\"\n      ],\n      related_topics: [\"Military Innovation\", \"Arms Control\", \"Technology Ethics\"]\n    },\n    trend_analysis: \"Increasing AI militarization globally\",\n    related_events: [1, 6],\n    created_at: new Date()\n  },\n  {\n    id: 13,\n    title: \"Argentina's Economic Crisis Deepens as Inflation Hits Record High\",\n    source: \"Bloomberg\",\n    published_date: \"2024-12-21\",\n    content: \"Argentina's inflation rate reached 180% annually, triggering widespread protests and economic uncertainty...\",\n    location: { country: \"Argentina\", city: \"Buenos Aires\", latitude: -34.6037, longitude: -58.3816 },\n    category: \"economy\",\n    entities: { \n      countries: [\"Argentina\", \"Brazil\", \"Chile\"], \n      organizations: [\"IMF\", \"Central Bank of Argentina\"],\n      people: [\"Javier Milei\"]\n    },\n    ai_summary: \"Argentina faces severe economic crisis with record inflation, prompting IMF intervention discussions and regional concern.\",\n    tags: [\"Economic Crisis\", \"Inflation\", \"Latin America\"],\n    sentiment: \"Negative\",\n    sentiment_score: 0.91,\n    geopolitical_impact: 7.3,\n    conflict_escalation_probability: 0.28,\n    economic_impact: 9.4,\n    educational_context: {\n      learning_objectives: [\n        \"Understand inflation dynamics\",\n        \"Analyze economic crisis management\",\n        \"Evaluate international financial cooperation\"\n      ],\n      related_topics: [\"Monetary Policy\", \"Economic Stabilization\", \"Regional Economics\"]\n    },\n    trend_analysis: \"Deteriorating economic conditions in Latin America\",\n    related_events: [8, 11],\n    created_at: new Date()\n  },\n  {\n    id: 14,\n    title: \"France Hosts International Tech4Peace Conference\",\n    source: \"Le Monde\",\n    published_date: \"2024-12-20\",\n    content: \"Paris hosted a groundbreaking conference bringing together global leaders to discuss technology's role in promoting peace...\",\n    location: { country: \"France\", city: \"Paris\", latitude: 48.8566, longitude: 2.3522 },\n    category: \"innovation\",\n    entities: { \n      countries: [\"France\", \"Germany\", \"Kenya\", \"Singapore\"], \n      organizations: [\"UNESCO\", \"European Commission\"],\n      people: [\"Emmanuel Macron\"]\n    },\n    ai_summary: \"Paris conference explores technology solutions for global peace, featuring innovative approaches to conflict prevention.\",\n    tags: [\"Peace Technology\", \"Innovation\", \"International Cooperation\"],\n    sentiment: \"Positive\",\n    sentiment_score: 0.89,\n    geopolitical_impact: 7.6,\n    conflict_escalation_probability: 0.05,\n    economic_impact: 6.8,\n    educational_context: {\n      learning_objectives: [\n        \"Understand technology for peace applications\",\n        \"Analyze conflict prevention strategies\",\n        \"Evaluate innovation in diplomacy\"\n      ],\n      related_topics: [\"Peace Studies\", \"Technology Ethics\", \"Preventive Diplomacy\"]\n    },\n    trend_analysis: \"Growing focus on technology for social good\",\n    related_events: [2, 6, 10],\n    created_at: new Date()\n  },\n  {\n    id: 15,\n    title: \"Sudan Reaches Ceasefire Agreement After UN Mediation\",\n    source: \"UN News\",\n    published_date: \"2024-12-19\",\n    content: \"Warring factions in Sudan agreed to a comprehensive ceasefire following intensive UN-mediated peace negotiations...\",\n    location: { country: \"Sudan\", city: \"Khartoum\", latitude: 15.5007, longitude: 32.5599 },\n    category: \"conflict\",\n    entities: { \n      countries: [\"Sudan\", \"Egypt\", \"Chad\"], \n      organizations: [\"United Nations\", \"African Union\"],\n      people: [\"António Guterres\"]\n    },\n    ai_summary: \"Sudan ceasefire agreement offers hope for peace after months of conflict. International community pledges reconstruction support.\",\n    tags: [\"Peace Agreement\", \"Conflict Resolution\", \"Africa\"],\n    sentiment: \"Positive\",\n    sentiment_score: 0.78,\n    geopolitical_impact: 8.2,\n    conflict_escalation_probability: 0.25,\n    economic_impact: 7.9,\n    educational_context: {\n      learning_objectives: [\n        \"Understand peace negotiation processes\",\n        \"Analyze international mediation\",\n        \"Evaluate post-conflict reconstruction\"\n      ],\n      related_topics: [\"Conflict Resolution\", \"Peacekeeping\", \"Post-Conflict Recovery\"]\n    },\n    trend_analysis: \"Cautious optimism for regional stability\",\n    related_events: [1, 7],\n    created_at: new Date()\n  },\n  {\n    id: 16,\n    title: \"Australia Launches World's Largest Coral Reef Restoration Project\",\n    source: \"ABC News Australia\",\n    published_date: \"2024-12-18\",\n    content: \"Australia initiated an unprecedented $2 billion coral reef restoration program targeting the Great Barrier Reef...\",\n    location: { country: \"Australia\", city: \"Cairns\", latitude: -16.9186, longitude: 145.7781 },\n    category: \"climate\",\n    entities: { \n      countries: [\"Australia\"], \n      organizations: [\"Great Barrier Reef Foundation\", \"CSIRO\"],\n      people: [\"Anthony Albanese\"]\n    },\n    ai_summary: \"Australia launches massive coral restoration project, combining cutting-edge marine science with climate adaptation strategies.\",\n    tags: [\"Marine Conservation\", \"Climate Adaptation\", \"Environmental Science\"],\n    sentiment: \"Positive\",\n    sentiment_score: 0.92,\n    geopolitical_impact: 6.7,\n    conflict_escalation_probability: 0.02,\n    economic_impact: 7.4,\n    educational_context: {\n      learning_objectives: [\n        \"Understand marine ecosystem restoration\",\n        \"Analyze climate adaptation strategies\",\n        \"Evaluate environmental conservation efforts\"\n      ],\n      related_topics: [\"Marine Biology\", \"Climate Science\", \"Conservation Technology\"]\n    },\n    trend_analysis: \"Increasing investment in ecosystem restoration\",\n    related_events: [2, 5, 9],\n    created_at: new Date()\n  },\n  {\n    id: 17,\n    title: \"Nigeria Launches Continental Free Trade Hub in Lagos\",\n    source: \"African Business\",\n    published_date: \"2024-12-17\",\n    content: \"Nigeria opened Africa's largest free trade zone, aiming to boost intra-African commerce under the AfCFTA agreement...\",\n    location: { country: \"Nigeria\", city: \"Lagos\", latitude: 6.5244, longitude: 3.3792 },\n    category: \"economy\",\n    entities: { \n      countries: [\"Nigeria\", \"Ghana\", \"Kenya\", \"South Africa\"], \n      organizations: [\"AfCFTA Secretariat\", \"African Development Bank\"],\n      people: [\"Bola Tinubu\"]\n    },\n    ai_summary: \"Nigeria's mega trade hub launches, potentially transforming African commerce and regional economic integration.\",\n    tags: [\"African Trade\", \"Economic Integration\", \"Free Trade\"],\n    sentiment: \"Positive\",\n    sentiment_score: 0.85,\n    geopolitical_impact: 7.9,\n    conflict_escalation_probability: 0.08,\n    economic_impact: 8.7,\n    educational_context: {\n      learning_objectives: [\n        \"Understand regional economic integration\",\n        \"Analyze free trade zone impacts\",\n        \"Evaluate African economic development\"\n      ],\n      related_topics: [\"Regional Trade\", \"Economic Development\", \"African Integration\"]\n    },\n    trend_analysis: \"Growing African economic integration\",\n    related_events: [8, 13],\n    created_at: new Date()\n  },\n  {\n    id: 18,\n    title: \"Israel-Palestine Peace Talks Resume in Oslo\",\n    source: \"Jerusalem Post\",\n    published_date: \"2024-12-16\",\n    content: \"Israeli and Palestinian representatives returned to peace negotiations in Oslo, mediated by Norway and the EU...\",\n    location: { country: \"Norway\", city: \"Oslo\", latitude: 59.9139, longitude: 10.7522 },\n    category: \"diplomacy\",\n    entities: { \n      countries: [\"Israel\", \"Palestine\", \"Norway\", \"European Union\"], \n      organizations: [\"EU\", \"Arab League\"],\n      people: [\"Benjamin Netanyahu\", \"Mahmoud Abbas\"]\n    },\n    ai_summary: \"Long-stalled peace talks resume in Oslo with international backing, offering renewed hope for Middle East resolution.\",\n    tags: [\"Peace Process\", \"Middle East\", \"Mediation\"],\n    sentiment: \"Positive\",\n    sentiment_score: 0.73,\n    geopolitical_impact: 9.1,\n    conflict_escalation_probability: 0.40,\n    economic_impact: 8.2,\n    educational_context: {\n      learning_objectives: [\n        \"Understand Middle East peace process\",\n        \"Analyze international mediation roles\",\n        \"Evaluate conflict resolution mechanisms\"\n      ],\n      related_topics: [\"Peace Negotiations\", \"Middle East History\", \"International Law\"]\n    },\n    trend_analysis: \"Tentative progress in regional diplomacy\",\n    related_events: [1, 11, 15],\n    created_at: new Date()\n  },\n  {\n    id: 19,\n    title: \"China Announces Mars Colony Preparation Mission\",\n    source: \"Xinhua\",\n    published_date: \"2024-12-15\",\n    content: \"China revealed plans for its most ambitious space mission, preparing for eventual human settlement on Mars...\",\n    location: { country: \"China\", city: \"Beijing\", latitude: 39.9042, longitude: 116.4074 },\n    category: \"innovation\",\n    entities: { \n      countries: [\"China\", \"United States\", \"Russia\"], \n      organizations: [\"CNSA\", \"Chinese Academy of Sciences\"],\n      people: [\"Xi Jinping\"]\n    },\n    ai_summary: \"China unveils Mars colonization program, intensifying international space race and technological competition.\",\n    tags: [\"Space Exploration\", \"Mars Mission\", \"Technology Competition\"],\n    sentiment: \"Positive\",\n    sentiment_score: 0.81,\n    geopolitical_impact: 8.6,\n    conflict_escalation_probability: 0.15,\n    economic_impact: 8.9,\n    educational_context: {\n      learning_objectives: [\n        \"Understand space exploration competition\",\n        \"Analyze technological advancement impacts\",\n        \"Evaluate international space cooperation\"\n      ],\n      related_topics: [\"Space Race\", \"Planetary Science\", \"International Competition\"]\n    },\n    trend_analysis: \"Intensifying space exploration rivalry\",\n    related_events: [6, 12],\n    created_at: new Date()\n  },\n  {\n    id: 20,\n    title: \"Brazil Hosts Amazon Conservation Summit with Indigenous Leaders\",\n    source: \"Reuters Brazil\",\n    published_date: \"2024-12-14\",\n    content: \"Brazil convened an unprecedented Amazon conservation summit featuring indigenous leaders and international experts...\",\n    location: { country: \"Brazil\", city: \"Manaus\", latitude: -3.1190, longitude: -60.0217 },\n    category: \"climate\",\n    entities: { \n      countries: [\"Brazil\", \"Peru\", \"Colombia\", \"Ecuador\"], \n      organizations: [\"Amazon Cooperation Treaty Organization\", \"UNEP\"],\n      people: [\"Luiz Inácio Lula da Silva\"]\n    },\n    ai_summary: \"Brazil leads Amazon conservation efforts with indigenous partnership, setting new model for environmental protection.\",\n    tags: [\"Amazon Conservation\", \"Indigenous Rights\", \"Environmental Protection\"],\n    sentiment: \"Positive\",\n    sentiment_score: 0.88,\n    geopolitical_impact: 7.8,\n    conflict_escalation_probability: 0.05,\n    economic_impact: 7.6,\n    educational_context: {\n      learning_objectives: [\n        \"Understand rainforest conservation\",\n        \"Analyze indigenous knowledge systems\",\n        \"Evaluate environmental cooperation\"\n      ],\n      related_topics: [\"Biodiversity\", \"Indigenous Rights\", \"Climate Policy\"]\n    },\n    trend_analysis: \"Growing recognition of indigenous conservation roles\",\n    related_events: [2, 16],\n    created_at: new Date()\n  }\n];\n","size_bytes":27678},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/home.tsx":{"content":"import { useState, useEffect } from 'react';\nimport { useQuery } from '@tanstack/react-query';\nimport { NewsEvent, Analytics } from '@shared/schema';\nimport { TopNav } from '@/components/navigation/top-nav';\nimport { CategoryFilters } from '@/components/filters/category-filters';\nimport { NewsGrid } from '@/components/news/news-grid';\nimport { AnalyticsPanel } from '@/components/dashboard/analytics-panel';\nimport { EventModal } from '@/components/news/event-modal';\nimport { useToast } from '@/hooks/use-toast';\n\nexport default function Home() {\n  const [selectedCategories, setSelectedCategories] = useState<string[]>([\n    'conflict', 'diplomacy', 'disaster', 'innovation', 'politics', 'economy', 'health', 'climate'\n  ]);\n  const [timelineDays, setTimelineDays] = useState(30);\n  const [selectedEvent, setSelectedEvent] = useState<NewsEvent | null>(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  \n  const { toast } = useToast();\n\n  // Fetch news events\n  const { data: events = [], isLoading: eventsLoading, error: eventsError } = useQuery<NewsEvent[]>({\n    queryKey: ['/api/news'],\n    refetchInterval: 300000, // Refetch every 5 minutes\n  });\n\n  // Fetch analytics\n  const { data: analytics, isLoading: analyticsLoading } = useQuery<Analytics>({\n    queryKey: ['/api/analytics'],\n    refetchInterval: 300000,\n  });\n\n  useEffect(() => {\n    if (eventsError) {\n      toast({\n        title: \"Error\",\n        description: \"Failed to load news events. Please try again.\",\n        variant: \"destructive\",\n      });\n    }\n  }, [eventsError, toast]);\n\n  const handleCategoryToggle = (category: string) => {\n    setSelectedCategories(prev => \n      prev.includes(category) \n        ? prev.filter(c => c !== category)\n        : [...prev, category]\n    );\n  };\n\n  const handleEventSelect = (event: NewsEvent) => {\n    setSelectedEvent(event);\n    setIsModalOpen(true);\n  };\n\n  const handleSearch = (query: string) => {\n    setSearchQuery(query);\n  };\n\n  const handleLearningMode = () => {\n    toast({\n      title: \"Learning Mode\",\n      description: \"Educational features are active! Click on any news event to see learning objectives and related topics.\",\n    });\n  };\n\n  // Get related events for modal\n  const getRelatedEvents = (event: NewsEvent | null): NewsEvent[] => {\n    if (!event || !event.related_events) return [];\n    \n    return event.related_events\n      .map(id => events.find(e => e.id === id))\n      .filter(Boolean) as NewsEvent[];\n  };\n\n  const filteredEvents = events.filter(event => {\n    const categoryMatch = selectedCategories.includes(event.category);\n    const searchMatch = !searchQuery || \n      event.title.toLowerCase().includes(searchQuery.toLowerCase()) ||\n      event.content.toLowerCase().includes(searchQuery.toLowerCase()) ||\n      event.location.country.toLowerCase().includes(searchQuery.toLowerCase());\n    \n    return categoryMatch && searchMatch;\n  });\n\n  if (eventsLoading && events.length === 0) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n          <p className=\"text-slate-600\">Loading global news events...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-slate-50\">\n      <TopNav onSearch={handleSearch} onLearningMode={handleLearningMode} />\n      \n      <CategoryFilters\n        selectedCategories={selectedCategories}\n        onCategoryToggle={handleCategoryToggle}\n        timelineDays={timelineDays}\n        onTimelineChange={setTimelineDays}\n      />\n\n      <div className=\"container mx-auto px-4 py-6\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n          {/* News Events Grid */}\n          <div className=\"lg:col-span-2\">\n            <NewsGrid\n              events={filteredEvents}\n              onEventSelect={handleEventSelect}\n              searchQuery={searchQuery}\n            />\n          </div>\n          \n          {/* Analytics Panel */}\n          <div className=\"lg:col-span-1\">\n            <AnalyticsPanel\n              analytics={analytics || null}\n              isLoading={analyticsLoading}\n              recentEvents={filteredEvents}\n              onEventSelect={handleEventSelect}\n            />\n          </div>\n        </div>\n      </div>\n\n      <EventModal\n        event={selectedEvent}\n        isOpen={isModalOpen}\n        onClose={() => setIsModalOpen(false)}\n        relatedEvents={getRelatedEvents(selectedEvent)}\n        onEventSelect={handleEventSelect}\n      />\n    </div>\n  );\n}\n","size_bytes":4686},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/components/dashboard/analytics-panel.tsx":{"content":"import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Analytics } from '@shared/schema';\nimport { HotspotsList } from '../dashboard/hotspots-list';\nimport { RecentEvents } from '../dashboard/recent-events';\nimport { NewsEvent } from '@shared/schema';\n\ninterface AnalyticsPanelProps {\n  analytics: Analytics | null;\n  isLoading: boolean;\n  recentEvents: NewsEvent[];\n  onEventSelect: (event: NewsEvent) => void;\n}\n\nexport function AnalyticsPanel({ analytics, isLoading, recentEvents, onEventSelect }: AnalyticsPanelProps) {\n  if (isLoading) {\n    return (\n      <div className=\"w-96 bg-white border-l border-slate-200 overflow-y-auto p-6\">\n        <div className=\"animate-pulse space-y-4\">\n          <div className=\"h-8 bg-slate-200 rounded\"></div>\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div className=\"h-20 bg-slate-200 rounded\"></div>\n            <div className=\"h-20 bg-slate-200 rounded\"></div>\n          </div>\n          <div className=\"h-40 bg-slate-200 rounded\"></div>\n        </div>\n      </div>\n    );\n  }\n\n  if (!analytics) {\n    return (\n      <div className=\"w-96 bg-white border-l border-slate-200 overflow-y-auto p-6\">\n        <div className=\"text-center text-slate-500\">\n          <p>Failed to load analytics</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"w-96 bg-white border-l border-slate-200 overflow-y-auto\">\n      {/* Panel Header */}\n      <div className=\"p-6 border-b border-slate-200\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <h2 className=\"text-lg font-semibold text-slate-900\">News Analysis</h2>\n        </div>\n        <div className=\"grid grid-cols-2 gap-4 text-center\">\n          <Card>\n            <CardContent className=\"p-3 bg-slate-50\">\n              <div className=\"text-2xl font-bold text-slate-900\">{analytics.totalEvents}</div>\n              <div className=\"text-xs text-slate-600\">Active Events</div>\n            </CardContent>\n          </Card>\n          <Card>\n            <CardContent className=\"p-3 bg-slate-50\">\n              <div className=\"text-2xl font-bold text-slate-900\">{analytics.hotspots}</div>\n              <div className=\"text-xs text-slate-600\">Global Hotspots</div>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n\n      {/* Analytics Dashboard */}\n      <div className=\"p-6 space-y-6\">\n        {/* AI Analysis Summary */}\n        <div>\n          <h3 className=\"font-semibold text-sm text-slate-900 mb-3\">AI Analysis Summary</h3>\n          <Card>\n            <CardContent className=\"p-4 bg-slate-50\">\n              <div className=\"space-y-3\">\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-slate-700\">High Impact Events</span>\n                  <span className=\"text-lg font-bold text-red-600\">\n                    {recentEvents.filter(e => e.geopolitical_impact >= 8).length}\n                  </span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-slate-700\">High Risk Events</span>\n                  <span className=\"text-lg font-bold text-orange-600\">\n                    {recentEvents.filter(e => e.conflict_escalation_probability >= 0.7).length}\n                  </span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-slate-700\">Innovation Events</span>\n                  <span className=\"text-lg font-bold text-green-600\">\n                    {recentEvents.filter(e => e.category === 'innovation').length}\n                  </span>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Event Distribution */}\n        <div>\n          <h3 className=\"font-semibold text-sm text-slate-900 mb-3\">Event Distribution</h3>\n          <div className=\"space-y-2\">\n            {Object.entries(analytics.eventDistribution).map(([category, count]) => {\n              const percentage = (count / analytics.totalEvents) * 100;\n              const colors = {\n                'conflict': 'bg-red-500',\n                'diplomacy': 'bg-green-500',\n                'disaster': 'bg-orange-500',\n                'innovation': 'bg-purple-500',\n                'politics': 'bg-blue-500',\n                'economy': 'bg-teal-500',\n                'health': 'bg-pink-500',\n                'climate': 'bg-lime-500'\n              };\n              \n              return (\n                <div key={category} className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-slate-700 capitalize\">{category}</span>\n                  <div className=\"flex items-center space-x-2\">\n                    <div className=\"w-20 h-2 bg-slate-200 rounded-full\">\n                      <div \n                        className={`h-2 rounded-full ${colors[category as keyof typeof colors] || 'bg-gray-500'}`}\n                        style={{ width: `${percentage}%` }}\n                      ></div>\n                    </div>\n                    <span className=\"text-xs text-slate-600 w-6 text-right\">{count}</span>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n\n        {/* Geopolitical Hotspots */}\n        <div>\n          <h3 className=\"font-semibold text-sm text-slate-900 mb-3\">Current Hotspots</h3>\n          <HotspotsList hotspots={analytics.topHotspots} />\n        </div>\n\n        {/* Recent Events */}\n        <div>\n          <h3 className=\"font-semibold text-sm text-slate-900 mb-3\">Recent Events</h3>\n          <RecentEvents events={recentEvents.slice(0, 5)} onEventSelect={onEventSelect} />\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":5830},"client/src/components/dashboard/hotspots-list.tsx":{"content":"import { Card, CardContent } from '@/components/ui/card';\n\ninterface Hotspot {\n  region: string;\n  type: string;\n  score: number;\n  riskLevel: string;\n}\n\ninterface HotspotsListProps {\n  hotspots: Hotspot[];\n}\n\nexport function HotspotsList({ hotspots }: HotspotsListProps) {\n  const getRiskColor = (riskLevel: string) => {\n    switch (riskLevel) {\n      case 'Critical':\n        return 'bg-red-50 border-red-200 text-red-900';\n      case 'High':\n        return 'bg-orange-50 border-orange-200 text-orange-900';\n      case 'Medium':\n        return 'bg-yellow-50 border-yellow-200 text-yellow-900';\n      default:\n        return 'bg-gray-50 border-gray-200 text-gray-900';\n    }\n  };\n\n  const getScoreColor = (riskLevel: string) => {\n    switch (riskLevel) {\n      case 'Critical':\n        return 'bg-red-100 text-red-800';\n      case 'High':\n        return 'bg-orange-100 text-orange-800';\n      case 'Medium':\n        return 'bg-yellow-100 text-yellow-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  return (\n    <div className=\"space-y-3\">\n      {hotspots.map((hotspot, index) => (\n        <Card key={index} className={`border ${getRiskColor(hotspot.riskLevel)}`}>\n          <CardContent className=\"p-3\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <div className=\"font-medium text-sm\">{hotspot.region}</div>\n                <div className=\"text-xs opacity-80\">{hotspot.type}</div>\n              </div>\n              <div className={`px-2 py-1 rounded text-xs font-medium ${getScoreColor(hotspot.riskLevel)}`}>\n                {hotspot.score}\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      ))}\n    </div>\n  );\n}\n","size_bytes":1739},"client/src/components/dashboard/recent-events.tsx":{"content":"import { Card, CardContent } from '@/components/ui/card';\nimport { NewsEvent } from '@shared/schema';\n\ninterface RecentEventsProps {\n  events: NewsEvent[];\n  onEventSelect: (event: NewsEvent) => void;\n}\n\nconst categoryColors = {\n  'conflict': '#EF4444',\n  'diplomacy': '#10B981',\n  'disaster': '#F59E0B',\n  'innovation': '#8B5CF6',\n  'politics': '#3B82F6',\n  'economy': '#059669',\n  'health': '#EC4899',\n  'climate': '#84CC16'\n};\n\nexport function RecentEvents({ events, onEventSelect }: RecentEventsProps) {\n  const recentEvents = events.slice(0, 5);\n\n  return (\n    <div className=\"space-y-3\">\n      {recentEvents.map(event => {\n        const color = categoryColors[event.category as keyof typeof categoryColors] || '#666666';\n        \n        return (\n          <Card \n            key={event.id}\n            className=\"cursor-pointer hover:bg-slate-50 transition-colors\"\n            onClick={() => onEventSelect(event)}\n          >\n            <CardContent className=\"p-3 bg-slate-50\">\n              <div className=\"flex items-start space-x-3\">\n                <div \n                  className=\"w-3 h-3 rounded-full mt-1 flex-shrink-0\"\n                  style={{ backgroundColor: color }}\n                />\n                <div className=\"flex-1 min-w-0\">\n                  <h4 className=\"font-medium text-sm text-slate-900 truncate\">\n                    {event.title}\n                  </h4>\n                  <p className=\"text-xs text-slate-600 mt-1\">\n                    {event.location.city}, {event.location.country}\n                  </p>\n                  <p className=\"text-xs text-slate-500 mt-1\">\n                    {new Date(event.published_date).toLocaleDateString()}\n                  </p>\n                </div>\n                <div \n                  className=\"text-xs font-medium px-2 py-1 rounded flex-shrink-0\"\n                  style={{ \n                    backgroundColor: `${color}20`, \n                    color: color \n                  }}\n                >\n                  {event.geopolitical_impact}/10\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        );\n      })}\n    </div>\n  );\n}\n","size_bytes":2166},"client/src/components/dashboard/sentiment-chart.tsx":{"content":"import { useEffect, useRef } from 'react';\n\ninterface SentimentData {\n  date: string;\n  positive: number;\n  negative: number;\n  neutral: number;\n}\n\ninterface SentimentChartProps {\n  data: SentimentData[];\n}\n\nexport function SentimentChart({ data }: SentimentChartProps) {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const chartRef = useRef<any>(null);\n\n  useEffect(() => {\n    if (!canvasRef.current) return;\n\n    const loadChart = async () => {\n      if (!(window as any).Chart) {\n        const script = document.createElement('script');\n        script.src = 'https://cdn.jsdelivr.net/npm/chart.js';\n        document.head.appendChild(script);\n        \n        await new Promise(resolve => {\n          script.onload = resolve;\n        });\n      }\n\n      // Destroy existing chart\n      if (chartRef.current) {\n        chartRef.current.destroy();\n      }\n\n      const ctx = canvasRef.current?.getContext('2d');\n      if (!ctx) return;\n      chartRef.current = new (window as any).Chart(ctx, {\n        type: 'line',\n        data: {\n          labels: data.map(d => d.date.slice(5)), // Show only MM-DD\n          datasets: [\n            {\n              label: 'Positive Events',\n              data: data.map(d => d.positive),\n              borderColor: '#10B981',\n              backgroundColor: 'rgba(16, 185, 129, 0.1)',\n              tension: 0.4,\n              fill: true\n            },\n            {\n              label: 'Negative Events',\n              data: data.map(d => d.negative),\n              borderColor: '#EF4444',\n              backgroundColor: 'rgba(239, 68, 68, 0.1)',\n              tension: 0.4,\n              fill: true\n            },\n            {\n              label: 'Neutral Events',\n              data: data.map(d => d.neutral),\n              borderColor: '#F59E0B',\n              backgroundColor: 'rgba(245, 158, 11, 0.1)',\n              tension: 0.4,\n              fill: true\n            }\n          ]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          plugins: {\n            legend: {\n              display: true,\n              position: 'bottom',\n              labels: {\n                font: {\n                  size: 10\n                }\n              }\n            }\n          },\n          scales: {\n            y: {\n              beginAtZero: true,\n              grid: {\n                display: false\n              },\n              ticks: {\n                font: {\n                  size: 10\n                }\n              }\n            },\n            x: {\n              grid: {\n                display: false\n              },\n              ticks: {\n                font: {\n                  size: 10\n                }\n              }\n            }\n          }\n        }\n      });\n    };\n\n    loadChart();\n\n    return () => {\n      if (chartRef.current) {\n        chartRef.current.destroy();\n      }\n    };\n  }, [data]);\n\n  return (\n    <div className=\"h-32\">\n      <canvas ref={canvasRef} />\n    </div>\n  );\n}\n","size_bytes":3007},"client/src/components/filters/category-filters.tsx":{"content":"import { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Flame, Handshake, AlertTriangle, Lightbulb, Landmark, TrendingUp, Heart, Leaf, Settings } from 'lucide-react';\n\nconst categories = [\n  { id: 'conflict', label: 'Conflict', icon: Flame, color: 'bg-red-100 text-red-700 hover:bg-red-200' },\n  { id: 'diplomacy', label: 'Diplomacy', icon: Handshake, color: 'bg-green-100 text-green-700 hover:bg-green-200' },\n  { id: 'disaster', label: 'Disaster', icon: AlertTriangle, color: 'bg-orange-100 text-orange-700 hover:bg-orange-200' },\n  { id: 'innovation', label: 'Innovation', icon: Lightbulb, color: 'bg-purple-100 text-purple-700 hover:bg-purple-200' },\n  { id: 'politics', label: 'Politics', icon: Landmark, color: 'bg-blue-100 text-blue-700 hover:bg-blue-200' },\n  { id: 'economy', label: 'Economy', icon: TrendingUp, color: 'bg-teal-100 text-teal-700 hover:bg-teal-200' },\n  { id: 'health', label: 'Health', icon: Heart, color: 'bg-pink-100 text-pink-700 hover:bg-pink-200' },\n  { id: 'climate', label: 'Climate', icon: Leaf, color: 'bg-lime-100 text-lime-700 hover:bg-lime-200' },\n];\n\ninterface CategoryFiltersProps {\n  selectedCategories: string[];\n  onCategoryToggle: (category: string) => void;\n  timelineDays: number;\n  onTimelineChange: (days: number) => void;\n}\n\nexport function CategoryFilters({ \n  selectedCategories, \n  onCategoryToggle, \n  timelineDays, \n  onTimelineChange \n}: CategoryFiltersProps) {\n  return (\n    <div className=\"bg-white border-b border-slate-200 px-6 py-4\">\n      <div className=\"flex flex-wrap items-center justify-between gap-4\">\n        <div className=\"flex flex-wrap gap-2\">\n          <span className=\"text-sm font-medium text-slate-700 mr-2\">Event Categories:</span>\n          {categories.map(category => {\n            const Icon = category.icon;\n            const isSelected = selectedCategories.includes(category.id);\n            \n            return (\n              <Button\n                key={category.id}\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={() => onCategoryToggle(category.id)}\n                className={`px-3 py-1 rounded-full text-xs font-medium transition-colors ${\n                  isSelected ? category.color : 'hover:bg-slate-100'\n                }`}\n              >\n                <Icon className=\"mr-1\" size={12} />\n                {category.label}\n              </Button>\n            );\n          })}\n        </div>\n        \n        <div className=\"flex items-center space-x-4\">\n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm font-medium text-slate-700\">Timeline:</span>\n            <input\n              type=\"range\"\n              min=\"1\"\n              max=\"30\"\n              value={timelineDays}\n              onChange={(e) => onTimelineChange(parseInt(e.target.value))}\n              className=\"w-32 h-2 bg-slate-200 rounded-lg appearance-none slider\"\n            />\n            <span className=\"text-xs text-slate-600\">Last {timelineDays} days</span>\n          </div>\n          <Button variant=\"ghost\" size=\"sm\">\n            <Settings size={16} />\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":3218},"client/src/components/filters/timeline-slider.tsx":{"content":"import { useState } from 'react';\nimport { Slider } from '@/components/ui/slider';\nimport { Label } from '@/components/ui/label';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Calendar, Clock } from 'lucide-react';\n\ninterface TimelineSliderProps {\n  value: number;\n  onChange: (value: number) => void;\n  min?: number;\n  max?: number;\n  step?: number;\n  className?: string;\n}\n\nexport function TimelineSlider({ \n  value, \n  onChange, \n  min = 1, \n  max = 30, \n  step = 1,\n  className = \"\"\n}: TimelineSliderProps) {\n  const [isHovered, setIsHovered] = useState(false);\n\n  const handleValueChange = (newValue: number[]) => {\n    onChange(newValue[0]);\n  };\n\n  const getTimeLabel = (days: number) => {\n    if (days === 1) return \"Last 24 hours\";\n    if (days <= 7) return `Last ${days} days`;\n    if (days <= 30) return `Last ${days} days`;\n    return `Last ${days} days`;\n  };\n\n  const getDateRange = (days: number) => {\n    const endDate = new Date();\n    const startDate = new Date();\n    startDate.setDate(endDate.getDate() - days);\n    \n    return {\n      start: startDate.toLocaleDateString('en-US', { month: 'short', day: 'numeric' }),\n      end: endDate.toLocaleDateString('en-US', { month: 'short', day: 'numeric' })\n    };\n  };\n\n  const dateRange = getDateRange(value);\n\n  return (\n    <div className={`space-y-3 ${className}`}>\n      <div className=\"flex items-center justify-between\">\n        <Label className=\"text-sm font-medium text-slate-700 flex items-center gap-2\">\n          <Clock size={14} />\n          Timeline Filter\n        </Label>\n        <span className=\"text-xs text-slate-600 font-medium\">\n          {getTimeLabel(value)}\n        </span>\n      </div>\n\n      <div \n        className=\"space-y-2\"\n        onMouseEnter={() => setIsHovered(true)}\n        onMouseLeave={() => setIsHovered(false)}\n      >\n        <Slider\n          value={[value]}\n          onValueChange={handleValueChange}\n          min={min}\n          max={max}\n          step={step}\n          className=\"w-full\"\n        />\n        \n        <div className=\"flex justify-between text-xs text-slate-500\">\n          <span>1 day</span>\n          <span>30 days</span>\n        </div>\n      </div>\n\n      {isHovered && (\n        <Card className=\"absolute z-10 mt-2 min-w-48 shadow-lg\">\n          <CardContent className=\"p-3\">\n            <div className=\"space-y-2\">\n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-sm font-medium text-slate-700\">Date Range</span>\n                <Calendar size={14} className=\"text-slate-500\" />\n              </div>\n              <div className=\"text-xs text-slate-600\">\n                <div className=\"flex justify-between\">\n                  <span>From: {dateRange.start}</span>\n                  <span>To: {dateRange.end}</span>\n                </div>\n              </div>\n              <div className=\"mt-2 pt-2 border-t border-slate-100\">\n                <div className=\"text-xs text-slate-500\">\n                  Showing events from the last <strong>{value}</strong> {value === 1 ? 'day' : 'days'}\n                </div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Quick presets */}\n      <div className=\"flex gap-1 flex-wrap\">\n        {[1, 7, 14, 30].map((preset) => (\n          <button\n            key={preset}\n            onClick={() => onChange(preset)}\n            className={`px-2 py-1 text-xs rounded-full transition-colors ${\n              value === preset\n                ? 'bg-blue-100 text-blue-700 font-medium'\n                : 'bg-slate-100 text-slate-600 hover:bg-slate-200'\n            }`}\n          >\n            {preset === 1 ? '24h' : `${preset}d`}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n}\n","size_bytes":3785},"client/src/components/map/event-marker.tsx":{"content":"import { NewsEvent } from '@shared/schema';\n\ninterface EventMarkerProps {\n  event: NewsEvent;\n  onClick: () => void;\n}\n\nconst categoryColors = {\n  'conflict': '#EF4444',\n  'diplomacy': '#10B981',\n  'disaster': '#F59E0B',\n  'innovation': '#8B5CF6',\n  'politics': '#3B82F6',\n  'economy': '#059669',\n  'health': '#EC4899',\n  'climate': '#84CC16'\n};\n\nexport function EventMarker({ event, onClick }: EventMarkerProps) {\n  const color = categoryColors[event.category as keyof typeof categoryColors] || '#666666';\n  \n  return (\n    <div\n      className=\"absolute cursor-pointer transform -translate-x-1/2 -translate-y-1/2 z-10\"\n      onClick={onClick}\n      style={{\n        left: `${((event.location.longitude + 180) / 360) * 100}%`,\n        top: `${((90 - event.location.latitude) / 180) * 100}%`\n      }}\n    >\n      <div\n        className=\"w-4 h-4 rounded-full border-2 border-white shadow-lg hover:scale-110 transition-transform\"\n        style={{ backgroundColor: color }}\n        title={event.title}\n      />\n    </div>\n  );\n}\n","size_bytes":1026},"client/src/components/map/event-modal.tsx":{"content":"import { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';\nimport { Badge } from '@/components/ui/badge';\nimport { Progress } from '@/components/ui/progress';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { NewsEvent } from '@shared/schema';\nimport { X } from 'lucide-react';\n\ninterface EventModalProps {\n  event: NewsEvent | null;\n  isOpen: boolean;\n  onClose: () => void;\n  relatedEvents: NewsEvent[];\n  onEventSelect: (event: NewsEvent) => void;\n}\n\nconst categoryColors = {\n  'conflict': 'bg-red-100 text-red-700',\n  'diplomacy': 'bg-green-100 text-green-700',\n  'disaster': 'bg-orange-100 text-orange-700',\n  'innovation': 'bg-purple-100 text-purple-700',\n  'politics': 'bg-blue-100 text-blue-700',\n  'economy': 'bg-teal-100 text-teal-700',\n  'health': 'bg-pink-100 text-pink-700',\n  'climate': 'bg-lime-100 text-lime-700'\n};\n\nconst sentimentColors = {\n  'Positive': 'text-green-600',\n  'Negative': 'text-red-600',\n  'Neutral': 'text-yellow-600'\n};\n\nexport function EventModal({ event, isOpen, onClose, relatedEvents, onEventSelect }: EventModalProps) {\n  if (!event) return null;\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    });\n  };\n\n  const allEntities = [\n    ...event.entities.countries.map(c => ({ type: 'Country', name: c })),\n    ...(event.entities.people || []).map(p => ({ type: 'Person', name: p })),\n    ...(event.entities.organizations || []).map(o => ({ type: 'Organization', name: o }))\n  ];\n\n  return (\n    <Dialog open={isOpen} onOpenChange={onClose}>\n      <DialogContent className=\"max-w-4xl max-h-[80vh] overflow-y-auto\">\n        <DialogHeader className=\"pb-6\">\n          <div className=\"flex justify-between items-start\">\n            <div className=\"flex-1\">\n              <div className=\"flex items-center space-x-2 mb-2\">\n                <Badge className={categoryColors[event.category as keyof typeof categoryColors]}>\n                  {event.category.charAt(0).toUpperCase() + event.category.slice(1)}\n                </Badge>\n                <span className=\"text-sm text-slate-600\">\n                  {event.location.city}, {event.location.country}\n                </span>\n                <span className=\"text-sm text-slate-500\">\n                  {formatDate(event.published_date)}\n                </span>\n              </div>\n              <DialogTitle className=\"text-xl font-semibold text-slate-900 mb-2\">\n                {event.title}\n              </DialogTitle>\n              <p className=\"text-sm text-slate-600\">Source: {event.source}</p>\n            </div>\n          </div>\n        </DialogHeader>\n\n        <div className=\"space-y-6\">\n          {/* AI Summary */}\n          <div>\n            <h3 className=\"font-semibold text-lg text-slate-900 mb-3\">AI Analysis Summary</h3>\n            <Card>\n              <CardContent className=\"p-4 bg-blue-50 border border-blue-200\">\n                <p className=\"text-slate-700\">{event.ai_summary}</p>\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Detailed Analysis */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div>\n              <h4 className=\"font-medium text-slate-900 mb-3\">Sentiment Analysis</h4>\n              <div className=\"flex items-center space-x-3\">\n                <div className={`w-4 h-4 rounded-full ${\n                  event.sentiment === 'Positive' ? 'bg-green-500' :\n                  event.sentiment === 'Negative' ? 'bg-red-500' : 'bg-yellow-500'\n                }`}></div>\n                <span className={`text-sm font-medium ${sentimentColors[event.sentiment as keyof typeof sentimentColors]}`}>\n                  {event.sentiment}\n                </span>\n                <span className=\"text-sm text-slate-500\">\n                  (Confidence: {Math.round(event.sentiment_score * 100)}%)\n                </span>\n              </div>\n            </div>\n            \n            <div>\n              <h4 className=\"font-medium text-slate-900 mb-3\">Geopolitical Impact</h4>\n              <div className=\"flex items-center space-x-2\">\n                <Progress value={event.geopolitical_impact * 10} className=\"flex-1\" />\n                <span className=\"text-sm font-medium text-slate-900\">\n                  {event.geopolitical_impact}/10\n                </span>\n              </div>\n            </div>\n\n            <div>\n              <h4 className=\"font-medium text-slate-900 mb-3\">Economic Impact</h4>\n              <div className=\"flex items-center space-x-2\">\n                <Progress value={event.economic_impact * 10} className=\"flex-1\" />\n                <span className=\"text-sm font-medium text-slate-900\">\n                  {event.economic_impact}/10\n                </span>\n              </div>\n            </div>\n\n            <div>\n              <h4 className=\"font-medium text-slate-900 mb-3\">Conflict Risk</h4>\n              <div className=\"flex items-center space-x-2\">\n                <Progress \n                  value={event.conflict_escalation_probability * 100} \n                  className=\"flex-1\"\n                />\n                <span className=\"text-sm font-medium text-slate-900\">\n                  {Math.round(event.conflict_escalation_probability * 100)}%\n                </span>\n              </div>\n            </div>\n          </div>\n\n          {/* Named Entities */}\n          <div>\n            <h4 className=\"font-medium text-slate-900 mb-3\">Key Entities</h4>\n            <div className=\"flex flex-wrap gap-2\">\n              {allEntities.map((entity, index) => (\n                <Badge key={index} variant=\"outline\" className=\"text-xs\">\n                  {entity.name}\n                </Badge>\n              ))}\n            </div>\n          </div>\n\n          {/* Educational Context */}\n          <div>\n            <h4 className=\"font-medium text-slate-900 mb-3\">Educational Context</h4>\n            <Card>\n              <CardContent className=\"p-4 bg-slate-50\">\n                <div className=\"space-y-3\">\n                  <div>\n                    <span className=\"font-medium text-sm text-slate-700\">Learning Objectives:</span>\n                    <ul className=\"list-disc list-inside text-sm text-slate-600 mt-1 space-y-1\">\n                      {event.educational_context.learning_objectives.map((objective, index) => (\n                        <li key={index}>{objective}</li>\n                      ))}\n                    </ul>\n                  </div>\n                  <div>\n                    <span className=\"font-medium text-sm text-slate-700\">Related Topics:</span>\n                    <div className=\"flex flex-wrap gap-1 mt-1\">\n                      {event.educational_context.related_topics.map((topic, index) => (\n                        <Badge key={index} variant=\"secondary\" className=\"text-xs\">\n                          {topic}\n                        </Badge>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Trend Analysis */}\n          <div>\n            <h4 className=\"font-medium text-slate-900 mb-3\">Trend Analysis</h4>\n            <p className=\"text-sm text-slate-700 bg-slate-50 p-3 rounded-lg\">\n              {event.trend_analysis}\n            </p>\n          </div>\n\n          {/* Related Events */}\n          {relatedEvents.length > 0 && (\n            <div>\n              <h4 className=\"font-medium text-slate-900 mb-3\">Related Events</h4>\n              <div className=\"space-y-2\">\n                {relatedEvents.map(relatedEvent => (\n                  <Card \n                    key={relatedEvent.id} \n                    className=\"cursor-pointer hover:bg-slate-50 transition-colors\"\n                    onClick={() => onEventSelect(relatedEvent)}\n                  >\n                    <CardContent className=\"p-3\">\n                      <div className=\"flex items-center space-x-2\">\n                        <div className={`w-2 h-2 rounded-full ${\n                          relatedEvent.category === 'conflict' ? 'bg-red-500' :\n                          relatedEvent.category === 'diplomacy' ? 'bg-green-500' :\n                          relatedEvent.category === 'disaster' ? 'bg-orange-500' :\n                          relatedEvent.category === 'innovation' ? 'bg-purple-500' :\n                          'bg-blue-500'\n                        }`}></div>\n                        <span className=\"text-sm text-slate-900 font-medium flex-1\">\n                          {relatedEvent.title}\n                        </span>\n                      </div>\n                      <p className=\"text-xs text-slate-600 mt-1\">\n                        {relatedEvent.location.city}, {relatedEvent.location.country}\n                      </p>\n                    </CardContent>\n                  </Card>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n}\n","size_bytes":9088},"client/src/components/map/world-map.tsx":{"content":"import { useEffect, useRef } from 'react';\nimport { NewsEvent } from '@shared/schema';\nimport { EventMarker } from './event-marker';\n\n// Leaflet imports with proper typing\ndeclare global {\n  interface Window {\n    L: any;\n  }\n}\n\ninterface WorldMapProps {\n  events: NewsEvent[];\n  selectedEvent: NewsEvent | null;\n  onEventSelect: (event: NewsEvent) => void;\n  visibleCategories: string[];\n}\n\nconst categoryColors = {\n  'conflict': '#EF4444',\n  'diplomacy': '#10B981',\n  'disaster': '#F59E0B',\n  'innovation': '#8B5CF6',\n  'politics': '#3B82F6',\n  'economy': '#059669',\n  'health': '#EC4899',\n  'climate': '#84CC16'\n};\n\nexport function WorldMap({ events, selectedEvent, onEventSelect, visibleCategories }: WorldMapProps) {\n  const mapRef = useRef<HTMLDivElement>(null);\n  const mapInstanceRef = useRef<any>(null);\n  const markersRef = useRef<any[]>([]);\n\n  useEffect(() => {\n    if (!mapRef.current) return;\n\n    // Load Leaflet dynamically\n    const loadLeaflet = async () => {\n      if (!window.L) {\n        // Add CSS\n        const cssLink = document.createElement('link');\n        cssLink.rel = 'stylesheet';\n        cssLink.href = 'https://unpkg.com/leaflet@1.9.4/dist/leaflet.css';\n        document.head.appendChild(cssLink);\n\n        // Add JS\n        const script = document.createElement('script');\n        script.src = 'https://unpkg.com/leaflet@1.9.4/dist/leaflet.js';\n        document.head.appendChild(script);\n        \n        await new Promise(resolve => {\n          script.onload = resolve;\n        });\n      }\n\n      // Initialize map\n      if (!mapInstanceRef.current) {\n        mapInstanceRef.current = window.L.map(mapRef.current).setView([20, 0], 2);\n        \n        window.L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n          attribution: '© OpenStreetMap contributors'\n        }).addTo(mapInstanceRef.current);\n      }\n    };\n\n    loadLeaflet();\n\n    return () => {\n      if (mapInstanceRef.current) {\n        mapInstanceRef.current.remove();\n        mapInstanceRef.current = null;\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!mapInstanceRef.current || !window.L) return;\n\n    // Clear existing markers\n    markersRef.current.forEach(marker => {\n      mapInstanceRef.current.removeLayer(marker);\n    });\n    markersRef.current = [];\n\n    // Add new markers for visible events\n    const filteredEvents = events.filter(event => \n      visibleCategories.includes(event.category)\n    );\n\n    filteredEvents.forEach(event => {\n      const color = categoryColors[event.category as keyof typeof categoryColors] || '#666666';\n      \n      const marker = window.L.circleMarker([event.location.latitude, event.location.longitude], {\n        radius: 8,\n        fillColor: color,\n        color: '#ffffff',\n        weight: 2,\n        opacity: 1,\n        fillOpacity: 0.8\n      }).addTo(mapInstanceRef.current);\n\n      marker.bindPopup(`\n        <div class=\"p-3 max-w-sm\">\n          <div class=\"flex items-center space-x-2 mb-2\">\n            <span class=\"px-2 py-1 rounded-full text-xs font-medium\" style=\"background-color: ${color}20; color: ${color}\">\n              ${event.category.charAt(0).toUpperCase() + event.category.slice(1)}\n            </span>\n            <span class=\"text-xs text-slate-600\">${event.location.city}, ${event.location.country}</span>\n          </div>\n          <h3 class=\"font-semibold text-sm text-slate-900 mb-2\">${event.title}</h3>\n          <p class=\"text-xs text-slate-700 mb-3\">${event.ai_summary}</p>\n          <div class=\"flex justify-between items-center\">\n            <span class=\"text-xs text-slate-500\">${event.source}</span>\n            <button onclick=\"window.openEventModal(${event.id})\" class=\"text-xs bg-blue-600 text-white px-2 py-1 rounded hover:bg-blue-700\">\n              View Details\n            </button>\n          </div>\n        </div>\n      `);\n\n      marker.on('click', () => {\n        onEventSelect(event);\n      });\n\n      markersRef.current.push(marker);\n    });\n\n    // Global function for popup buttons\n    (window as any).openEventModal = (eventId: number) => {\n      const event = events.find(e => e.id === eventId);\n      if (event) {\n        onEventSelect(event);\n      }\n    };\n\n  }, [events, visibleCategories, onEventSelect]);\n\n  return (\n    <div className=\"flex-1 relative\">\n      <div ref={mapRef} className=\"w-full h-full\" />\n      \n      {/* Map Controls */}\n      <div className=\"absolute top-4 left-4 bg-white rounded-lg shadow-md p-3 space-y-2\">\n        <button className=\"w-full text-left px-3 py-2 text-sm hover:bg-slate-100 rounded flex items-center\">\n          <span className=\"mr-2\">🗺️</span>Heatmap View\n        </button>\n        <button className=\"w-full text-left px-3 py-2 text-sm hover:bg-slate-100 rounded flex items-center\">\n          <span className=\"mr-2\">⏰</span>Time-lapse Mode\n        </button>\n        <button className=\"w-full text-left px-3 py-2 text-sm hover:bg-slate-100 rounded flex items-center\">\n          <span className=\"mr-2\">📖</span>Story Mode\n        </button>\n      </div>\n\n      {/* Legend */}\n      <div className=\"absolute bottom-4 left-4 bg-white rounded-lg shadow-md p-4\">\n        <h3 className=\"font-semibold text-sm text-slate-900 mb-3\">Event Categories</h3>\n        <div className=\"grid grid-cols-2 gap-2 text-xs\">\n          {Object.entries(categoryColors).map(([category, color]) => (\n            <div key={category} className=\"flex items-center\">\n              <div className=\"w-3 h-3 rounded-full mr-2\" style={{ backgroundColor: color }}></div>\n              <span className=\"capitalize\">{category}</span>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":5655},"client/src/components/navigation/top-nav.tsx":{"content":"import { useState } from 'react';\nimport { Search, GraduationCap, Globe } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Badge } from '@/components/ui/badge';\n\ninterface TopNavProps {\n  onSearch: (query: string) => void;\n  onLearningMode: () => void;\n}\n\nexport function TopNav({ onSearch, onLearningMode }: TopNavProps) {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleSearch = (e: React.FormEvent) => {\n    e.preventDefault();\n    onSearch(searchQuery);\n  };\n\n  return (\n    <nav className=\"bg-white shadow-sm border-b border-slate-200 px-6 py-4\">\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-4\">\n          <div className=\"flex items-center space-x-2\">\n            <Globe className=\"text-blue-600 text-2xl\" />\n            <h1 className=\"text-xl font-bold text-slate-900\">Geo-Political News Mapper</h1>\n            <Badge variant=\"secondary\" className=\"bg-blue-100 text-blue-700\">\n              Educational\n            </Badge>\n          </div>\n        </div>\n        \n        <div className=\"flex items-center space-x-4\">\n          <form onSubmit={handleSearch} className=\"relative\">\n            <Input\n              type=\"text\"\n              placeholder=\"Search by country or region...\"\n              value={searchQuery}\n              onChange={(e) => setSearchQuery(e.target.value)}\n              className=\"w-64 pl-10 pr-4 py-2 border border-slate-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm\"\n            />\n            <Search className=\"absolute left-3 top-3 text-slate-400 text-sm\" size={16} />\n          </form>\n          \n          <Button onClick={onLearningMode} className=\"bg-blue-600 text-white px-4 py-2 rounded-lg text-sm font-medium hover:bg-blue-700\">\n            <GraduationCap className=\"mr-2\" size={16} />\n            Learning Mode\n          </Button>\n        </div>\n      </div>\n    </nav>\n  );\n}\n","size_bytes":2019},"client/src/components/news/event-modal.tsx":{"content":"import { NewsEvent } from '@shared/schema';\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';\nimport { Badge } from '@/components/ui/badge';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { CalendarDays, MapPin, TrendingUp, AlertTriangle, Brain, Target, BookOpen, Users, Building } from 'lucide-react';\nimport { Separator } from '@/components/ui/separator';\n\ninterface EventModalProps {\n  event: NewsEvent | null;\n  isOpen: boolean;\n  onClose: () => void;\n  relatedEvents: NewsEvent[];\n  onEventSelect: (event: NewsEvent) => void;\n}\n\nconst categoryColors = {\n  conflict: 'bg-red-100 text-red-800 border-red-200',\n  diplomacy: 'bg-blue-100 text-blue-800 border-blue-200',\n  disaster: 'bg-orange-100 text-orange-800 border-orange-200',\n  innovation: 'bg-green-100 text-green-800 border-green-200',\n  politics: 'bg-purple-100 text-purple-800 border-purple-200',\n  economy: 'bg-yellow-100 text-yellow-800 border-yellow-200',\n  health: 'bg-pink-100 text-pink-800 border-pink-200',\n  climate: 'bg-emerald-100 text-emerald-800 border-emerald-200',\n};\n\nconst getSentimentColor = (sentiment: string) => {\n  switch (sentiment.toLowerCase()) {\n    case 'positive': return 'text-green-600';\n    case 'negative': return 'text-red-600';\n    default: return 'text-gray-600';\n  }\n};\n\nconst getRiskLevel = (escalationProb: number) => {\n  if (escalationProb >= 0.7) return { level: 'High Risk', color: 'text-red-600', bgColor: 'bg-red-50' };\n  if (escalationProb >= 0.4) return { level: 'Medium Risk', color: 'text-orange-600', bgColor: 'bg-orange-50' };\n  return { level: 'Low Risk', color: 'text-green-600', bgColor: 'bg-green-50' };\n};\n\nexport function EventModal({ event, isOpen, onClose, relatedEvents, onEventSelect }: EventModalProps) {\n  if (!event) return null;\n\n  const riskLevel = getRiskLevel(event.conflict_escalation_probability);\n\n  return (\n    <Dialog open={isOpen} onOpenChange={onClose}>\n      <DialogContent className=\"max-w-4xl max-h-[90vh] overflow-y-auto\">\n        <DialogHeader>\n          <DialogTitle className=\"text-xl leading-tight pr-8\">\n            {event.title}\n          </DialogTitle>\n        </DialogHeader>\n\n        <div className=\"space-y-6\">\n          {/* Event Header */}\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center gap-4 text-sm text-gray-600\">\n              <div className=\"flex items-center gap-1\">\n                <CalendarDays className=\"h-4 w-4\" />\n                {new Date(event.published_date).toLocaleDateString()}\n              </div>\n              <div className=\"flex items-center gap-1\">\n                <MapPin className=\"h-4 w-4\" />\n                {event.location.city}, {event.location.country}\n              </div>\n              <Badge className={`${categoryColors[event.category as keyof typeof categoryColors]} text-xs`}>\n                {event.category}\n              </Badge>\n            </div>\n\n            <div className=\"text-gray-700 leading-relaxed\">\n              {event.content}\n            </div>\n\n            <div className=\"bg-blue-50 p-4 rounded-lg border border-blue-200\">\n              <div className=\"flex items-center gap-2 mb-2\">\n                <Brain className=\"h-5 w-5 text-blue-600\" />\n                <span className=\"font-semibold text-blue-900\">AI Analysis</span>\n              </div>\n              <p className=\"text-blue-800\">{event.ai_summary}</p>\n            </div>\n          </div>\n\n          {/* AI Insights Grid */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"text-lg flex items-center gap-2\">\n                <TrendingUp className=\"h-5 w-5\" />\n                Geopolitical Analysis\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-6\">\n                <div className=\"text-center p-4 bg-blue-50 rounded-lg\">\n                  <TrendingUp className=\"h-8 w-8 text-blue-600 mx-auto mb-2\" />\n                  <div className=\"text-2xl font-bold text-blue-600 mb-1\">\n                    {event.geopolitical_impact.toFixed(1)}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">Geopolitical Impact</div>\n                </div>\n\n                <div className={`text-center p-4 ${riskLevel.bgColor} rounded-lg`}>\n                  <AlertTriangle className=\"h-8 w-8 text-orange-600 mx-auto mb-2\" />\n                  <div className={`text-2xl font-bold ${riskLevel.color} mb-1`}>\n                    {Math.round(event.conflict_escalation_probability * 100)}%\n                  </div>\n                  <div className=\"text-sm text-gray-600\">Escalation Risk</div>\n                </div>\n\n                <div className=\"text-center p-4 bg-purple-50 rounded-lg\">\n                  <Brain className=\"h-8 w-8 text-purple-600 mx-auto mb-2\" />\n                  <div className={`text-2xl font-bold ${getSentimentColor(event.sentiment)} mb-1`}>\n                    {event.sentiment}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">Sentiment</div>\n                </div>\n\n                <div className=\"text-center p-4 bg-green-50 rounded-lg\">\n                  <TrendingUp className=\"h-8 w-8 text-green-600 mx-auto mb-2\" />\n                  <div className=\"text-2xl font-bold text-green-600 mb-1\">\n                    {event.economic_impact.toFixed(1)}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">Economic Impact</div>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Educational Context */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"text-lg flex items-center gap-2\">\n                <Target className=\"h-5 w-5\" />\n                Educational Context\n              </CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div>\n                <h4 className=\"font-semibold text-gray-900 mb-3 flex items-center gap-2\">\n                  <BookOpen className=\"h-4 w-4\" />\n                  Learning Objectives\n                </h4>\n                <ul className=\"space-y-2\">\n                  {event.educational_context.learning_objectives.map((objective, index) => (\n                    <li key={index} className=\"flex items-start gap-3\">\n                      <div className=\"w-2 h-2 bg-green-500 rounded-full mt-2 flex-shrink-0\"></div>\n                      <span className=\"text-gray-700\">{objective}</span>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n\n              <Separator />\n\n              <div>\n                <h4 className=\"font-semibold text-gray-900 mb-3\">Related Topics</h4>\n                <div className=\"flex flex-wrap gap-2\">\n                  {event.educational_context.related_topics.map((topic) => (\n                    <Badge key={topic} variant=\"outline\" className=\"bg-blue-50 text-blue-700 border-blue-200\">\n                      {topic}\n                    </Badge>\n                  ))}\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Entities & Trend Analysis */}\n          <div className=\"grid md:grid-cols-2 gap-6\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"text-lg flex items-center gap-2\">\n                  <Users className=\"h-5 w-5\" />\n                  Key Entities\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div>\n                  <h4 className=\"font-semibold text-gray-900 mb-2\">Countries</h4>\n                  <div className=\"flex flex-wrap gap-1\">\n                    {event.entities.countries.map((country) => (\n                      <Badge key={country} variant=\"outline\" className=\"text-xs\">\n                        {country}\n                      </Badge>\n                    ))}\n                  </div>\n                </div>\n\n                {event.entities.people && event.entities.people.length > 0 && (\n                  <div>\n                    <h4 className=\"font-semibold text-gray-900 mb-2\">Key People</h4>\n                    <div className=\"flex flex-wrap gap-1\">\n                      {event.entities.people.map((person) => (\n                        <Badge key={person} variant=\"outline\" className=\"text-xs bg-purple-50\">\n                          {person}\n                        </Badge>\n                      ))}\n                    </div>\n                  </div>\n                )}\n\n                {event.entities.organizations && event.entities.organizations.length > 0 && (\n                  <div>\n                    <h4 className=\"font-semibold text-gray-900 mb-2 flex items-center gap-1\">\n                      <Building className=\"h-4 w-4\" />\n                      Organizations\n                    </h4>\n                    <div className=\"flex flex-wrap gap-1\">\n                      {event.entities.organizations.map((org) => (\n                        <Badge key={org} variant=\"outline\" className=\"text-xs bg-orange-50\">\n                          {org}\n                        </Badge>\n                      ))}\n                    </div>\n                  </div>\n                )}\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"text-lg\">Trend Analysis</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <p className=\"text-gray-700\">{event.trend_analysis}</p>\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Related Events */}\n          {relatedEvents.length > 0 && (\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"text-lg\">Related Events</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-3\">\n                  {relatedEvents.map((relatedEvent) => (\n                    <div\n                      key={relatedEvent.id}\n                      className=\"p-3 border rounded-lg cursor-pointer hover:bg-gray-50 transition-colors\"\n                      onClick={() => onEventSelect(relatedEvent)}\n                    >\n                      <div className=\"flex justify-between items-start gap-3\">\n                        <div className=\"flex-1\">\n                          <h4 className=\"font-medium text-gray-900 mb-1\">{relatedEvent.title}</h4>\n                          <p className=\"text-sm text-gray-600 line-clamp-2\">{relatedEvent.ai_summary}</p>\n                        </div>\n                        <Badge className={`${categoryColors[relatedEvent.category as keyof typeof categoryColors]} text-xs flex-shrink-0`}>\n                          {relatedEvent.category}\n                        </Badge>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n          )}\n\n          {/* Tags */}\n          <div>\n            <h4 className=\"font-semibold text-gray-900 mb-3\">Tags</h4>\n            <div className=\"flex flex-wrap gap-2\">\n              {event.tags.map((tag) => (\n                <Badge key={tag} variant=\"outline\" className=\"bg-gray-50\">\n                  {tag}\n                </Badge>\n              ))}\n            </div>\n          </div>\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n}","size_bytes":11497},"client/src/components/news/news-grid.tsx":{"content":"import { NewsEvent } from '@shared/schema';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { CalendarDays, MapPin, TrendingUp, AlertTriangle, Brain, Target, GraduationCap, BookOpen } from 'lucide-react';\nimport { StudyGuideModal } from '@/components/study-guide/study-guide-modal';\n\ninterface NewsGridProps {\n  events: NewsEvent[];\n  onEventSelect: (event: NewsEvent) => void;\n  searchQuery: string;\n}\n\nconst categoryColors = {\n  conflict: 'bg-red-100 text-red-800 border-red-200',\n  diplomacy: 'bg-blue-100 text-blue-800 border-blue-200',\n  disaster: 'bg-orange-100 text-orange-800 border-orange-200',\n  innovation: 'bg-green-100 text-green-800 border-green-200',\n  politics: 'bg-purple-100 text-purple-800 border-purple-200',\n  economy: 'bg-yellow-100 text-yellow-800 border-yellow-200',\n  health: 'bg-pink-100 text-pink-800 border-pink-200',\n  climate: 'bg-emerald-100 text-emerald-800 border-emerald-200',\n};\n\nconst getSentimentColor = (sentiment: string) => {\n  switch (sentiment.toLowerCase()) {\n    case 'positive': return 'text-green-600';\n    case 'negative': return 'text-red-600';\n    default: return 'text-gray-600';\n  }\n};\n\nconst getRiskLevel = (escalationProb: number) => {\n  if (escalationProb >= 0.7) return { level: 'High', color: 'text-red-600' };\n  if (escalationProb >= 0.4) return { level: 'Medium', color: 'text-orange-600' };\n  return { level: 'Low', color: 'text-green-600' };\n};\n\nexport function NewsGrid({ events, onEventSelect, searchQuery }: NewsGridProps) {\n  if (events.length === 0) {\n    return (\n      <div className=\"text-center py-12\">\n        <div className=\"text-gray-500 mb-4\">\n          <Brain className=\"h-16 w-16 mx-auto mb-4 opacity-50\" />\n          <h3 className=\"text-lg font-semibold mb-2\">No Events Found</h3>\n          <p>\n            {searchQuery \n              ? `No news events match your search for \"${searchQuery}\"`\n              : \"No news events match your current filters\"\n            }\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"mb-6\">\n        <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">Global News Analysis</h2>\n        <p className=\"text-gray-600\">\n          Discover {events.length} news events with AI-powered insights and educational context\n        </p>\n      </div>\n\n      <div className=\"grid gap-4\">\n        {events.map((event) => {\n          const riskLevel = getRiskLevel(event.conflict_escalation_probability);\n          \n          return (\n            <Card \n              key={event.id} \n              className=\"hover:shadow-lg transition-all duration-200 border-l-4 border-l-blue-500\"\n            >\n              <CardHeader className=\"pb-3 cursor-pointer\" onClick={() => onEventSelect(event)}>\n                <div className=\"flex justify-between items-start gap-4\">\n                  <CardTitle className=\"text-lg leading-tight flex-1\">\n                    {event.title}\n                  </CardTitle>\n                  <Badge \n                    className={`${categoryColors[event.category as keyof typeof categoryColors]} text-xs`}\n                  >\n                    {event.category}\n                  </Badge>\n                </div>\n                \n                <div className=\"flex items-center gap-4 text-sm text-gray-600\">\n                  <div className=\"flex items-center gap-1\">\n                    <CalendarDays className=\"h-4 w-4\" />\n                    {new Date(event.published_date).toLocaleDateString()}\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    <MapPin className=\"h-4 w-4\" />\n                    {event.location.city}, {event.location.country}\n                  </div>\n                </div>\n              </CardHeader>\n\n              <CardContent className=\"space-y-4\">\n                <div className=\"cursor-pointer\" onClick={() => onEventSelect(event)}>\n                  <p className=\"text-gray-700 line-clamp-3\">\n                    {event.ai_summary}\n                  </p>\n                </div>\n\n                {/* AI Insights */}\n                <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 py-3 bg-gray-50 rounded-lg p-3 cursor-pointer\" onClick={() => onEventSelect(event)}>\n                  <div className=\"text-center\">\n                    <div className=\"flex items-center justify-center gap-1 mb-1\">\n                      <TrendingUp className=\"h-4 w-4 text-blue-600\" />\n                      <span className=\"text-xs font-medium text-gray-600\">Impact</span>\n                    </div>\n                    <div className=\"text-lg font-bold text-blue-600\">\n                      {event.geopolitical_impact.toFixed(1)}\n                    </div>\n                  </div>\n\n                  <div className=\"text-center\">\n                    <div className=\"flex items-center justify-center gap-1 mb-1\">\n                      <AlertTriangle className=\"h-4 w-4 text-orange-600\" />\n                      <span className=\"text-xs font-medium text-gray-600\">Risk</span>\n                    </div>\n                    <div className={`text-lg font-bold ${riskLevel.color}`}>\n                      {riskLevel.level}\n                    </div>\n                  </div>\n\n                  <div className=\"text-center\">\n                    <div className=\"flex items-center justify-center gap-1 mb-1\">\n                      <Brain className=\"h-4 w-4 text-purple-600\" />\n                      <span className=\"text-xs font-medium text-gray-600\">Sentiment</span>\n                    </div>\n                    <div className={`text-lg font-bold ${getSentimentColor(event.sentiment)}`}>\n                      {event.sentiment}\n                    </div>\n                  </div>\n\n                  <div className=\"text-center\">\n                    <div className=\"flex items-center justify-center gap-1 mb-1\">\n                      <Target className=\"h-4 w-4 text-green-600\" />\n                      <span className=\"text-xs font-medium text-gray-600\">Learning</span>\n                    </div>\n                    <div className=\"text-lg font-bold text-green-600\">\n                      {event.educational_context.learning_objectives.length}\n                    </div>\n                  </div>\n                </div>\n\n                {/* Learning Objectives Preview */}\n                <div className=\"border-t pt-3 cursor-pointer\" onClick={() => onEventSelect(event)}>\n                  <div className=\"flex items-center gap-2 mb-2\">\n                    <Target className=\"h-4 w-4 text-green-600\" />\n                    <span className=\"text-sm font-semibold text-gray-700\">Key Learning Objectives</span>\n                  </div>\n                  <div className=\"space-y-1\">\n                    {event.educational_context.learning_objectives.slice(0, 2).map((objective, index) => (\n                      <div key={index} className=\"text-sm text-gray-600 flex items-start gap-2\">\n                        <div className=\"w-1.5 h-1.5 bg-green-500 rounded-full mt-2 flex-shrink-0\"></div>\n                        <span>{objective}</span>\n                      </div>\n                    ))}\n                    {event.educational_context.learning_objectives.length > 2 && (\n                      <div className=\"text-sm text-blue-600 font-medium\">\n                        +{event.educational_context.learning_objectives.length - 2} more objectives\n                      </div>\n                    )}\n                  </div>\n                </div>\n\n                {/* Tags and Study Guide Button */}\n                <div className=\"flex items-center justify-between pt-2 border-t\">\n                  <div className=\"flex flex-wrap gap-2\">\n                    {event.tags.slice(0, 3).map((tag) => (\n                      <Badge key={tag} variant=\"outline\" className=\"text-xs\">\n                        {tag}\n                      </Badge>\n                    ))}\n                    {event.tags.length > 3 && (\n                      <Badge variant=\"outline\" className=\"text-xs text-gray-500\">\n                        +{event.tags.length - 3} more\n                      </Badge>\n                    )}\n                  </div>\n                  \n                  <div onClick={(e) => e.stopPropagation()}>\n                    <StudyGuideModal eventId={event.id} eventTitle={event.title}>\n                      <Button \n                        variant=\"outline\" \n                        size=\"sm\" \n                        className=\"ml-2 bg-blue-50 hover:bg-blue-100 border-blue-200 text-blue-700\"\n                      >\n                        <GraduationCap className=\"w-4 h-4 mr-1\" />\n                        Study Guide\n                      </Button>\n                    </StudyGuideModal>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          );\n        })}\n      </div>\n    </div>\n  );\n}","size_bytes":9042},"client/src/components/study-guide/study-guide-modal.tsx":{"content":"import { useState } from 'react';\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from '@/components/ui/dialog';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\n\nimport { ScrollArea } from '@/components/ui/scroll-area';\nimport { GraduationCap, BookOpen, Brain, HelpCircle, CheckCircle, FileText, Target } from 'lucide-react';\nimport { apiRequest } from '@/lib/queryClient';\nimport { type StudyGuide } from '@shared/schema';\n\ninterface StudyGuideModalProps {\n  eventId: number;\n  eventTitle: string;\n  children: React.ReactNode;\n}\n\nexport function StudyGuideModal({ eventId, eventTitle, children }: StudyGuideModalProps) {\n  const [isOpen, setIsOpen] = useState(false);\n  const queryClient = useQueryClient();\n\n  const { data: studyGuide, isLoading } = useQuery({\n    queryKey: ['/api/study-guide', eventId],\n    enabled: isOpen,\n  });\n\n  const generateMutation = useMutation({\n    mutationFn: () => apiRequest(`/api/study-guide/${eventId}`, 'POST', {\n      examFocus: 'all',\n      difficultyLevel: 'intermediate',\n      includeQuiz: true\n    }),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/study-guide', eventId] });\n    }\n  });\n\n  const handleGenerateStudyGuide = () => {\n    generateMutation.mutate();\n  };\n\n  return (\n    <Dialog open={isOpen} onOpenChange={setIsOpen}>\n      <DialogTrigger asChild>\n        {children}\n      </DialogTrigger>\n      <DialogContent className=\"max-w-4xl max-h-[90vh] flex flex-col\">\n        <DialogHeader>\n          <DialogTitle className=\"flex items-center gap-2\">\n            <GraduationCap className=\"h-5 w-5 text-blue-600\" />\n            Study Guide\n          </DialogTitle>\n          <DialogDescription>\n            AI-generated educational content for: {eventTitle}\n          </DialogDescription>\n        </DialogHeader>\n        \n        <ScrollArea className=\"flex-1\">\n          {isLoading ? (\n            <div className=\"flex items-center justify-center h-64\">\n              <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n            </div>\n          ) : studyGuide ? (\n            <StudyGuideContent studyGuide={studyGuide} />\n          ) : (\n            <div className=\"flex flex-col items-center justify-center h-64 space-y-4\">\n              <BookOpen className=\"h-12 w-12 text-gray-400\" />\n              <p className=\"text-gray-600\">No study guide available yet</p>\n              <Button \n                onClick={handleGenerateStudyGuide}\n                disabled={generateMutation.isPending}\n                className=\"bg-blue-600 hover:bg-blue-700\"\n              >\n                {generateMutation.isPending ? (\n                  <>\n                    <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n                    Generating...\n                  </>\n                ) : (\n                  <>\n                    <Brain className=\"w-4 h-4 mr-2\" />\n                    Generate Study Guide\n                  </>\n                )}\n              </Button>\n            </div>\n          )}\n        </ScrollArea>\n      </DialogContent>\n    </Dialog>\n  );\n}\n\nfunction StudyGuideContent({ studyGuide }: { studyGuide: StudyGuide | any }) {\n  return (\n    <div className=\"space-y-6\">\n      {/* Summary Section */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <FileText className=\"h-5 w-5 text-blue-600\" />\n            Summary\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <p className=\"text-gray-700 leading-relaxed\">{studyGuide.summary}</p>\n        </CardContent>\n      </Card>\n\n      <Tabs defaultValue=\"overview\" className=\"w-full\">\n        <TabsList className=\"grid w-full grid-cols-5\">\n          <TabsTrigger value=\"overview\">Overview</TabsTrigger>\n          <TabsTrigger value=\"discussion\">Discussion</TabsTrigger>\n          <TabsTrigger value=\"quiz\">Quiz</TabsTrigger>\n          <TabsTrigger value=\"vocabulary\">Vocabulary</TabsTrigger>\n          <TabsTrigger value=\"exam-prep\">Exam Prep</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"overview\" className=\"space-y-4\">\n          {/* Keywords */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"text-lg\">Key Terms</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"flex flex-wrap gap-2\">\n                {studyGuide.keywords.map((keyword: string, index: number) => (\n                  <Badge key={index} variant=\"secondary\" className=\"bg-blue-100 text-blue-800\">\n                    {keyword}\n                  </Badge>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Key Figures and Data */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"text-lg\">Key Figures & Data</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <p className=\"text-gray-700\">{studyGuide.key_figures_data}</p>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"discussion\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <HelpCircle className=\"h-5 w-5 text-green-600\" />\n                Discussion Questions\n              </CardTitle>\n              <CardDescription>\n                Critical thinking questions to deepen your understanding\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-3\">\n                {studyGuide.discussion_questions.map((question: string, index: number) => (\n                  <div key={index} className=\"p-3 border border-gray-200 rounded-lg bg-gray-50\">\n                    <p className=\"font-medium text-gray-800\">\n                      {index + 1}. {question}\n                    </p>\n                  </div>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"quiz\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <CheckCircle className=\"h-5 w-5 text-purple-600\" />\n                Quiz Questions\n              </CardTitle>\n              <CardDescription>\n                Test your knowledge with these practice questions\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-4\">\n                {studyGuide.quiz_questions.map((quiz: any, index: number) => (\n                  <QuizQuestion key={index} quiz={quiz} index={index} />\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"vocabulary\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <BookOpen className=\"h-5 w-5 text-orange-600\" />\n                Vocabulary\n              </CardTitle>\n              <CardDescription>\n                Important terms and their definitions\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-3\">\n                {studyGuide.vocabulary.map((vocab: any, index: number) => (\n                  <div key={index} className=\"border-l-4 border-orange-500 pl-4 py-2\">\n                    <h4 className=\"font-semibold text-gray-800\">{vocab.term}</h4>\n                    <p className=\"text-gray-600\">{vocab.definition}</p>\n                  </div>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"exam-prep\" className=\"space-y-4\">\n          {/* CSS Linkage */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <Target className=\"h-5 w-5 text-red-600\" />\n                CSS Subject Linkage\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"flex flex-wrap gap-2\">\n                {studyGuide.css_linkage.map((subject: string, index: number) => (\n                  <Badge key={index} variant=\"outline\" className=\"border-red-500 text-red-700\">\n                    {subject}\n                  </Badge>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Exam Relevance */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"text-lg\">Exam Relevance</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"grid grid-cols-2 gap-4\">\n                <ExamRelevanceItem\n                  exam=\"CSS\"\n                  relevant={studyGuide.exam_relevance.css}\n                  color=\"red\"\n                />\n                <ExamRelevanceItem\n                  exam=\"ISSB\"\n                  relevant={studyGuide.exam_relevance.issb}\n                  color=\"blue\"\n                />\n                <ExamRelevanceItem\n                  exam=\"SAT\"\n                  relevant={studyGuide.exam_relevance.sat}\n                  color=\"green\"\n                />\n                <ExamRelevanceItem\n                  exam=\"Current Affairs\"\n                  relevant={studyGuide.exam_relevance.general_current_affairs}\n                  color=\"purple\"\n                />\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n}\n\nfunction QuizQuestion({ quiz, index }: { quiz: any, index: number }) {\n  const [showAnswer, setShowAnswer] = useState(false);\n\n  return (\n    <div className=\"border border-gray-200 rounded-lg p-4 space-y-3\">\n      <div className=\"flex items-start justify-between\">\n        <p className=\"font-medium text-gray-800\">\n          {index + 1}. {quiz.question}\n        </p>\n        <Badge variant=\"outline\" className=\"ml-2\">\n          {quiz.type.replace('_', ' ')}\n        </Badge>\n      </div>\n      \n      {quiz.options && (\n        <div className=\"space-y-2\">\n          {quiz.options.map((option: string, optIndex: number) => (\n            <div key={optIndex} className=\"flex items-center space-x-2\">\n              <div className=\"w-6 h-6 rounded-full border border-gray-300 flex items-center justify-center text-sm\">\n                {String.fromCharCode(65 + optIndex)}\n              </div>\n              <span className=\"text-gray-700\">{option}</span>\n            </div>\n          ))}\n        </div>\n      )}\n      \n      <div className=\"space-y-2\">\n        <Button\n          variant=\"outline\"\n          size=\"sm\"\n          onClick={() => setShowAnswer(!showAnswer)}\n        >\n          {showAnswer ? 'Hide Answer' : 'Show Answer'}\n        </Button>\n        \n        {showAnswer && (\n          <div className=\"bg-green-50 border border-green-200 rounded p-3 space-y-2\">\n            <div className=\"flex items-center gap-2\">\n              <CheckCircle className=\"h-4 w-4 text-green-600\" />\n              <span className=\"font-medium text-green-800\">\n                Correct Answer: {quiz.correct_answer}\n              </span>\n            </div>\n            <p className=\"text-green-700 text-sm\">{quiz.explanation}</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction ExamRelevanceItem({ exam, relevant, color }: { exam: string, relevant: boolean, color: string }) {\n  const colorClasses = {\n    red: 'bg-red-100 text-red-800 border-red-300',\n    blue: 'bg-blue-100 text-blue-800 border-blue-300',\n    green: 'bg-green-100 text-green-800 border-green-300',\n    purple: 'bg-purple-100 text-purple-800 border-purple-300',\n  };\n\n  return (\n    <div className={`p-3 rounded-lg border ${colorClasses[color as keyof typeof colorClasses]}`}>\n      <div className=\"flex items-center justify-between\">\n        <span className=\"font-medium\">{exam}</span>\n        <div className=\"flex items-center gap-1\">\n          {relevant ? (\n            <CheckCircle className=\"h-4 w-4 text-green-600\" />\n          ) : (\n            <div className=\"h-4 w-4 rounded-full border-2 border-gray-400\"></div>\n          )}\n          <span className=\"text-sm\">{relevant ? 'Relevant' : 'Not Relevant'}</span>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":12717},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 w-full border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }","size_bytes":1639},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }","size_bytes":755},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }","size_bytes":1882},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209}}}